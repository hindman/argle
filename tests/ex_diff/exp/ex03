
# SPEC

<task=grep>   [-i] [-v] [-m] [-C]
              [--color <red|green|blue>]
              <rgx> [<path>...]
<task=sub>    [-i] [-n] <rgx> <rep> [<path>...]
<task=search> [-i] [-g] [-d | -p] <rgx> [<path>...]

<task>             : Task to perform
<task=grep>        : Emit lines matching pattern
<task=sub>         : Search for pattern and replace
<task=search>      : Emit text matching pattern
<rgx>              : Python regular expression
<path>             : Path(s) to input
<rep>              : Replacement text
-i --ignore-case   : Ignore case
-v --invert-match  : Select non-matching lines
-m --max-count <n> : Stop searching after N matches
-C --context <n>   : Print N lines of before/after context
--color <>         : Highlight matching text
-n --nsubs <n>     : N of substitutions
-g --group <n>     : Emit just capture group N [0 for all]
-d --delim <s>     : Delimeter for capture groups [tab]
-p --para          : Emit capture groups one-per-line, paragraph-style


# PARSER_DEBUG

parse()
  variant()
    eat(wanted = 'variant_def')
    get_next_token(lexed = 'angle_open')
    variant_elems()
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'angle_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, is_first = True)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 1, line = 2, col = 1)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'task', pos = 2, line = 2, col = 2)
          eat(wanted = 'assign')
          get_next_token(lexed = 'assign')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'assign')
          eat(eaten = 'assign', text = '=', pos = 6, line = 2, col = 6)
          next_choice()
            quoted_literal()
              eat(wanted = 'quoted_literal')
              get_next_token(lexed = 'valid_name')
              quoted_literal(∅)
            eat(wanted = 'valid_name')
            get_next_token(lexed = 'valid_name')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'valid_name')
            eat(eaten = 'valid_name', text = 'grep', pos = 7, line = 2, col = 7)
            next_choice(RESULT = Choice)
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 11, line = 2, col = 11)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'brack_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 15, line = 2, col = 15)
        variant_elems()
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'short_option')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'short_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'short_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'short_option')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'short_option')
              eat(eaten = 'short_option', text = '-i', pos = 16, line = 2, col = 16)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'brack_close')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'brack_close')
                  quant_range(∅)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(∅)
              with_quantifer(RESULT = Option)
            option(RESULT = Option)
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'brack_close')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 18, line = 2, col = 18)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'brack_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 20, line = 2, col = 20)
        variant_elems()
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'short_option')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'short_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'short_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'short_option')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'short_option')
              eat(eaten = 'short_option', text = '-v', pos = 21, line = 2, col = 21)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'brack_close')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'brack_close')
                  quant_range(∅)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(∅)
              with_quantifer(RESULT = Option)
            option(RESULT = Option)
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'brack_close')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 23, line = 2, col = 23)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'brack_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 25, line = 2, col = 25)
        variant_elems()
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'short_option')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'short_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'short_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'short_option')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'short_option')
              eat(eaten = 'short_option', text = '-m', pos = 26, line = 2, col = 26)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'brack_close')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'brack_close')
                  quant_range(∅)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(∅)
              with_quantifer(RESULT = Option)
            option(RESULT = Option)
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'brack_close')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 28, line = 2, col = 28)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'brack_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 30, line = 2, col = 30)
        variant_elems()
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'short_option')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'short_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'short_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'short_option')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'short_option')
              eat(eaten = 'short_option', text = '-C', pos = 31, line = 2, col = 31)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'brack_close')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'brack_close')
                  quant_range(∅)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(∅)
              with_quantifer(RESULT = Option)
            option(RESULT = Option)
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'brack_close')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 33, line = 2, col = 33)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'brack_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 49, line = 3, col = 15)
        variant_elems()
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'long_option')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'long_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'long_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'long_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'long_option')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'long_option')
              taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
              get_next_token(returned = 'long_option')
              eat(eaten = 'long_option', text = '--color', pos = 50, line = 3, col = 16)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'angle_open')
                taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
                get_next_token(returned = 'angle_open')
                eat(eaten = 'angle_open', text = '<', pos = 58, line = 3, col = 24)
                var_input_elems()
                  eat(wanted = 'valid_name')
                  get_next_token(lexed = 'valid_name')
                  taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
                  get_next_token(returned = 'valid_name')
                  eat(eaten = 'valid_name', text = 'red', pos = 59, line = 3, col = 25)
                  eat(wanted = 'assign')
                  get_next_token(lexed = 'choice_sep')
                  next_choice()
                    eat(wanted = 'choice_sep')
                    get_next_token(lexed = 'choice_sep')
                    taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
                    get_next_token(returned = 'choice_sep')
                    eat(eaten = 'choice_sep', text = '|', pos = 62, line = 3, col = 28)
                    quoted_literal()
                      eat(wanted = 'quoted_literal')
                      get_next_token(lexed = 'valid_name')
                      quoted_literal(∅)
                    eat(wanted = 'valid_name')
                    get_next_token(lexed = 'valid_name')
                    taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
                    get_next_token(returned = 'valid_name')
                    eat(eaten = 'valid_name', text = 'green', pos = 63, line = 3, col = 29)
                    next_choice(RESULT = Choice)
                  next_choice()
                    eat(wanted = 'choice_sep')
                    get_next_token(lexed = 'choice_sep')
                    taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
                    get_next_token(returned = 'choice_sep')
                    eat(eaten = 'choice_sep', text = '|', pos = 68, line = 3, col = 34)
                    quoted_literal()
                      eat(wanted = 'quoted_literal')
                      get_next_token(lexed = 'valid_name')
                      quoted_literal(∅)
                    eat(wanted = 'valid_name')
                    get_next_token(lexed = 'valid_name')
                    taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
                    get_next_token(returned = 'valid_name')
                    eat(eaten = 'valid_name', text = 'blue', pos = 69, line = 3, col = 35)
                    next_choice(RESULT = Choice)
                  next_choice()
                    eat(wanted = 'choice_sep')
                    get_next_token(lexed = 'angle_close')
                    next_choice(∅)
                  var_input_elems(RESULT = VarInput)
                eat(wanted = 'angle_close')
                get_next_token(lexed = 'angle_close')
                taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
                get_next_token(returned = 'angle_close')
                eat(eaten = 'angle_close', text = '>', pos = 73, line = 3, col = 39)
                with_quantifer()
                  quantifier()
                    triple_dot()
                      eat(wanted = 'triple_dot')
                      get_next_token(lexed = 'brack_close')
                      triple_dot(∅)
                    quant_range()
                      eat(wanted = 'quant_range')
                      get_next_token(lexed = 'brack_close')
                      quant_range(∅)
                    eat(wanted = 'question')
                    get_next_token(lexed = 'brack_close')
                    quantifier(∅)
                  with_quantifer(RESULT = Parameter)
                parameter(RESULT = Parameter)
              any_parameter(RESULT = Parameter)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            option(RESULT = Option)
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'brack_close')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 74, line = 3, col = 40)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'angle_open')
            quantifier(∅)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'angle_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 90, line = 4, col = 15)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'rgx', pos = 91, line = 4, col = 16)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 94, line = 4, col = 19)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'brack_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 96, line = 4, col = 21)
        variant_elems()
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'angle_open')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_open')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'angle_open')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'angle_open')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'angle_open')
            taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
            get_next_token(returned = 'angle_open')
            eat(eaten = 'angle_open', text = '<', pos = 97, line = 4, col = 22)
            var_input_elems()
              eat(wanted = 'valid_name')
              get_next_token(lexed = 'valid_name')
              taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
              get_next_token(returned = 'valid_name')
              eat(eaten = 'valid_name', text = 'path', pos = 98, line = 4, col = 23)
              eat(wanted = 'assign')
              get_next_token(lexed = 'angle_close')
              next_choice()
                eat(wanted = 'choice_sep')
                get_next_token(lexed = 'angle_close')
                next_choice(∅)
              var_input_elems(RESULT = VarInput)
            eat(wanted = 'angle_close')
            get_next_token(lexed = 'angle_close')
            taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
            get_next_token(returned = 'angle_close')
            eat(eaten = 'angle_close', text = '>', pos = 102, line = 4, col = 27)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'triple_dot')
                  taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
                  get_next_token(returned = 'triple_dot')
                  eat(eaten = 'triple_dot', text = '...', pos = 103, line = 4, col = 28)
                  triple_dot(RESULT = Quantifier)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(RESULT = Quantifier)
              with_quantifer(RESULT = Positional)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'brack_close')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'brack_close')
                  quant_range(∅)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(∅)
              with_quantifer(RESULT = Positional)
            positional(RESULT = Positional)
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'brack_close')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'indent', self_indent = 0, tok_indent = 14)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 106, line = 4, col = 31)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'angle_open')
            quantifier(∅)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'angle_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
        with_quantifer()
          with_quantifer(∅)
        with_quantifer()
          with_quantifer(∅)
        positional(∅)
      option()
        bare_option()
          eat(wanted = 'long_option|short_option')
          get_next_token(lexed = 'angle_open')
          bare_option(∅)
        option(∅)
      variant_elems(RESULT = VariantElems)
    variant(RESULT = Variant)
  variant()
    eat(wanted = 'variant_def')
    get_next_token(lexed = 'angle_open')
    variant_elems()
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'angle_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, is_first = True)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 108, line = 5, col = 1)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'task', pos = 109, line = 5, col = 2)
          eat(wanted = 'assign')
          get_next_token(lexed = 'assign')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'assign')
          eat(eaten = 'assign', text = '=', pos = 113, line = 5, col = 6)
          next_choice()
            quoted_literal()
              eat(wanted = 'quoted_literal')
              get_next_token(lexed = 'valid_name')
              quoted_literal(∅)
            eat(wanted = 'valid_name')
            get_next_token(lexed = 'valid_name')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'valid_name')
            eat(eaten = 'valid_name', text = 'sub', pos = 114, line = 5, col = 7)
            next_choice(RESULT = Choice)
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 117, line = 5, col = 10)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'brack_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 122, line = 5, col = 15)
        variant_elems()
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'short_option')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'short_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'short_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'short_option')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'short_option')
              eat(eaten = 'short_option', text = '-i', pos = 123, line = 5, col = 16)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'brack_close')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'brack_close')
                  quant_range(∅)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(∅)
              with_quantifer(RESULT = Option)
            option(RESULT = Option)
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'brack_close')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 125, line = 5, col = 18)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'brack_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 127, line = 5, col = 20)
        variant_elems()
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'short_option')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'short_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'short_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'short_option')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'short_option')
              eat(eaten = 'short_option', text = '-n', pos = 128, line = 5, col = 21)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'brack_close')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'brack_close')
                  quant_range(∅)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(∅)
              with_quantifer(RESULT = Option)
            option(RESULT = Option)
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'brack_close')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 130, line = 5, col = 23)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'angle_open')
            quantifier(∅)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'angle_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 132, line = 5, col = 25)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'rgx', pos = 133, line = 5, col = 26)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 136, line = 5, col = 29)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'angle_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'angle_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'angle_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 138, line = 5, col = 31)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'rep', pos = 139, line = 5, col = 32)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 142, line = 5, col = 35)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'brack_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 144, line = 5, col = 37)
        variant_elems()
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'angle_open')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_open')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'angle_open')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'angle_open')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'angle_open')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'angle_open')
            eat(eaten = 'angle_open', text = '<', pos = 145, line = 5, col = 38)
            var_input_elems()
              eat(wanted = 'valid_name')
              get_next_token(lexed = 'valid_name')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'valid_name')
              eat(eaten = 'valid_name', text = 'path', pos = 146, line = 5, col = 39)
              eat(wanted = 'assign')
              get_next_token(lexed = 'angle_close')
              next_choice()
                eat(wanted = 'choice_sep')
                get_next_token(lexed = 'angle_close')
                next_choice(∅)
              var_input_elems(RESULT = VarInput)
            eat(wanted = 'angle_close')
            get_next_token(lexed = 'angle_close')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'angle_close')
            eat(eaten = 'angle_close', text = '>', pos = 150, line = 5, col = 43)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'triple_dot')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'triple_dot')
                  eat(eaten = 'triple_dot', text = '...', pos = 151, line = 5, col = 44)
                  triple_dot(RESULT = Quantifier)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(RESULT = Quantifier)
              with_quantifer(RESULT = Positional)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'brack_close')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'brack_close')
                  quant_range(∅)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(∅)
              with_quantifer(RESULT = Positional)
            positional(RESULT = Positional)
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'brack_close')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 154, line = 5, col = 47)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'angle_open')
            quantifier(∅)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'angle_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
        with_quantifer()
          with_quantifer(∅)
        with_quantifer()
          with_quantifer(∅)
        positional(∅)
      option()
        bare_option()
          eat(wanted = 'long_option|short_option')
          get_next_token(lexed = 'angle_open')
          bare_option(∅)
        option(∅)
      variant_elems(RESULT = VariantElems)
    variant(RESULT = Variant)
  variant()
    eat(wanted = 'variant_def')
    get_next_token(lexed = 'angle_open')
    variant_elems()
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'angle_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, is_first = True)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 156, line = 6, col = 1)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'task', pos = 157, line = 6, col = 2)
          eat(wanted = 'assign')
          get_next_token(lexed = 'assign')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'assign')
          eat(eaten = 'assign', text = '=', pos = 161, line = 6, col = 6)
          next_choice()
            quoted_literal()
              eat(wanted = 'quoted_literal')
              get_next_token(lexed = 'valid_name')
              quoted_literal(∅)
            eat(wanted = 'valid_name')
            get_next_token(lexed = 'valid_name')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'valid_name')
            eat(eaten = 'valid_name', text = 'search', pos = 162, line = 6, col = 7)
            next_choice(RESULT = Choice)
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 168, line = 6, col = 13)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'brack_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 170, line = 6, col = 15)
        variant_elems()
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'short_option')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'short_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'short_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'short_option')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'short_option')
              eat(eaten = 'short_option', text = '-i', pos = 171, line = 6, col = 16)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'brack_close')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'brack_close')
                  quant_range(∅)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(∅)
              with_quantifer(RESULT = Option)
            option(RESULT = Option)
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'brack_close')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 173, line = 6, col = 18)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'brack_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 175, line = 6, col = 20)
        variant_elems()
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'short_option')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'short_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'short_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'short_option')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'short_option')
              eat(eaten = 'short_option', text = '-g', pos = 176, line = 6, col = 21)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'brack_close')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'brack_close')
                  quant_range(∅)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(∅)
              with_quantifer(RESULT = Option)
            option(RESULT = Option)
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'brack_close')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 178, line = 6, col = 23)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'brack_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 180, line = 6, col = 25)
        variant_elems()
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'short_option')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'short_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'short_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'short_option')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'short_option')
              eat(eaten = 'short_option', text = '-d', pos = 181, line = 6, col = 26)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'choice_sep')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'choice_sep')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'choice_sep')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'choice_sep')
                  quant_range(∅)
                eat(wanted = 'question')
                get_next_token(lexed = 'choice_sep')
                quantifier(∅)
              with_quantifer(RESULT = Option)
            option(RESULT = Option)
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'choice_sep')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'choice_sep')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'choice_sep')
            eat(eaten = 'choice_sep', text = '|', pos = 184, line = 6, col = 29)
            choice_sep(RESULT = ChoiceSep)
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'short_option')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'short_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'short_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'short_option')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'short_option')
              eat(eaten = 'short_option', text = '-p', pos = 186, line = 6, col = 31)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'brack_close')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'brack_close')
                  quant_range(∅)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(∅)
              with_quantifer(RESULT = Option)
            option(RESULT = Option)
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'brack_close')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 188, line = 6, col = 33)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'angle_open')
            quantifier(∅)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'angle_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 190, line = 6, col = 35)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'rgx', pos = 191, line = 6, col = 36)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 194, line = 6, col = 39)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'brack_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 196, line = 6, col = 41)
        variant_elems()
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'angle_open')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_open')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'angle_open')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'angle_open')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'angle_open')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'angle_open')
            eat(eaten = 'angle_open', text = '<', pos = 197, line = 6, col = 42)
            var_input_elems()
              eat(wanted = 'valid_name')
              get_next_token(lexed = 'valid_name')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'valid_name')
              eat(eaten = 'valid_name', text = 'path', pos = 198, line = 6, col = 43)
              eat(wanted = 'assign')
              get_next_token(lexed = 'angle_close')
              next_choice()
                eat(wanted = 'choice_sep')
                get_next_token(lexed = 'angle_close')
                next_choice(∅)
              var_input_elems(RESULT = VarInput)
            eat(wanted = 'angle_close')
            get_next_token(lexed = 'angle_close')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'angle_close')
            eat(eaten = 'angle_close', text = '>', pos = 202, line = 6, col = 47)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'triple_dot')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'triple_dot')
                  eat(eaten = 'triple_dot', text = '...', pos = 203, line = 6, col = 48)
                  triple_dot(RESULT = Quantifier)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(RESULT = Quantifier)
              with_quantifer(RESULT = Positional)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'brack_close')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'brack_close')
                  quant_range(∅)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(∅)
              with_quantifer(RESULT = Positional)
            positional(RESULT = Positional)
          quoted_literal()
            eat(wanted = 'quoted_literal')
            get_next_token(lexed = 'brack_close')
            quoted_literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 206, line = 6, col = 51)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'angle_open')
            quantifier(∅)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'angle_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
        with_quantifer()
          with_quantifer(∅)
        with_quantifer()
          with_quantifer(∅)
        positional(∅)
      option()
        bare_option()
          eat(wanted = 'long_option|short_option')
          get_next_token(lexed = 'angle_open')
          bare_option(∅)
        option(∅)
      variant_elems(RESULT = VariantElems)
    variant(RESULT = Variant)
  variant()
    eat(wanted = 'variant_def')
    get_next_token(lexed = 'angle_open')
    variant_elems()
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'angle_open')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, is_first = True)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 209, line = 8, col = 1)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'task', pos = 210, line = 8, col = 2)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 214, line = 8, col = 6)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'opt_spec_sep')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'opt_spec_sep')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'opt_spec_sep')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'opt_spec_sep')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'opt_spec_sep')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'opt_spec_sep')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      quoted_literal()
        eat(wanted = 'quoted_literal')
        get_next_token(lexed = 'opt_spec_sep')
        quoted_literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'opt_spec_sep')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'opt_spec_sep')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'opt_spec_sep')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'opt_spec_sep')
        with_quantifer()
          with_quantifer(∅)
        with_quantifer()
          with_quantifer(∅)
        positional(∅)
      option()
        bare_option()
          eat(wanted = 'long_option|short_option')
          get_next_token(lexed = 'opt_spec_sep')
          bare_option(∅)
        option(∅)
      variant_elems(RESULT = VariantElems)
    variant(∅)
  collect_section_elems()
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'angle_open')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'angle_open')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        get_next_token(lexed = 'angle_open')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'angle_open')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'angle_open')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'angle_open')
              taste(ok = True, is_first = True)
              get_next_token(returned = 'angle_open')
              eat(eaten = 'angle_open', text = '<', pos = 209, line = 8, col = 1)
              var_input_elems()
                eat(wanted = 'valid_name')
                get_next_token(lexed = 'valid_name')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'valid_name')
                eat(eaten = 'valid_name', text = 'task', pos = 210, line = 8, col = 2)
                eat(wanted = 'assign')
                get_next_token(lexed = 'angle_close')
                next_choice()
                  eat(wanted = 'choice_sep')
                  get_next_token(lexed = 'angle_close')
                  next_choice(∅)
                var_input_elems(RESULT = VarInput)
              eat(wanted = 'angle_close')
              get_next_token(lexed = 'angle_close')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'angle_close')
              eat(eaten = 'angle_close', text = '>', pos = 214, line = 8, col = 6)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              positional(RESULT = Positional)
            opt_spec_elem(RESULT = Positional)
          opt_spec_def(RESULT = Positional)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 228, line = 8, col = 20)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Task to perform', pos = 230, line = 8, col = 22)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'angle_open')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'angle_open')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        get_next_token(lexed = 'angle_open')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'angle_open')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'angle_open')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'angle_open')
              taste(ok = True, is_first = True)
              get_next_token(returned = 'angle_open')
              eat(eaten = 'angle_open', text = '<', pos = 246, line = 9, col = 1)
              var_input_elems()
                eat(wanted = 'valid_name')
                get_next_token(lexed = 'valid_name')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'valid_name')
                eat(eaten = 'valid_name', text = 'task', pos = 247, line = 9, col = 2)
                eat(wanted = 'assign')
                get_next_token(lexed = 'assign')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'assign')
                eat(eaten = 'assign', text = '=', pos = 251, line = 9, col = 6)
                next_choice()
                  quoted_literal()
                    eat(wanted = 'quoted_literal')
                    get_next_token(lexed = 'valid_name')
                    quoted_literal(∅)
                  eat(wanted = 'valid_name')
                  get_next_token(lexed = 'valid_name')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'valid_name')
                  eat(eaten = 'valid_name', text = 'grep', pos = 252, line = 9, col = 7)
                  next_choice(RESULT = Choice)
                next_choice()
                  eat(wanted = 'choice_sep')
                  get_next_token(lexed = 'angle_close')
                  next_choice(∅)
                var_input_elems(RESULT = VarInput)
              eat(wanted = 'angle_close')
              get_next_token(lexed = 'angle_close')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'angle_close')
              eat(eaten = 'angle_close', text = '>', pos = 256, line = 9, col = 11)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              positional(RESULT = Positional)
            opt_spec_elem(RESULT = Positional)
          opt_spec_def(RESULT = Positional)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 265, line = 9, col = 20)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Emit lines matching pattern', pos = 267, line = 9, col = 22)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'angle_open')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'angle_open')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        get_next_token(lexed = 'angle_open')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'angle_open')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'angle_open')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'angle_open')
              taste(ok = True, is_first = True)
              get_next_token(returned = 'angle_open')
              eat(eaten = 'angle_open', text = '<', pos = 295, line = 10, col = 1)
              var_input_elems()
                eat(wanted = 'valid_name')
                get_next_token(lexed = 'valid_name')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'valid_name')
                eat(eaten = 'valid_name', text = 'task', pos = 296, line = 10, col = 2)
                eat(wanted = 'assign')
                get_next_token(lexed = 'assign')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'assign')
                eat(eaten = 'assign', text = '=', pos = 300, line = 10, col = 6)
                next_choice()
                  quoted_literal()
                    eat(wanted = 'quoted_literal')
                    get_next_token(lexed = 'valid_name')
                    quoted_literal(∅)
                  eat(wanted = 'valid_name')
                  get_next_token(lexed = 'valid_name')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'valid_name')
                  eat(eaten = 'valid_name', text = 'sub', pos = 301, line = 10, col = 7)
                  next_choice(RESULT = Choice)
                next_choice()
                  eat(wanted = 'choice_sep')
                  get_next_token(lexed = 'angle_close')
                  next_choice(∅)
                var_input_elems(RESULT = VarInput)
              eat(wanted = 'angle_close')
              get_next_token(lexed = 'angle_close')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'angle_close')
              eat(eaten = 'angle_close', text = '>', pos = 304, line = 10, col = 10)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              positional(RESULT = Positional)
            opt_spec_elem(RESULT = Positional)
          opt_spec_def(RESULT = Positional)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 314, line = 10, col = 20)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Search for pattern and replace', pos = 316, line = 10, col = 22)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'angle_open')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'angle_open')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        get_next_token(lexed = 'angle_open')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'angle_open')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'angle_open')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'angle_open')
              taste(ok = True, is_first = True)
              get_next_token(returned = 'angle_open')
              eat(eaten = 'angle_open', text = '<', pos = 347, line = 11, col = 1)
              var_input_elems()
                eat(wanted = 'valid_name')
                get_next_token(lexed = 'valid_name')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'valid_name')
                eat(eaten = 'valid_name', text = 'task', pos = 348, line = 11, col = 2)
                eat(wanted = 'assign')
                get_next_token(lexed = 'assign')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'assign')
                eat(eaten = 'assign', text = '=', pos = 352, line = 11, col = 6)
                next_choice()
                  quoted_literal()
                    eat(wanted = 'quoted_literal')
                    get_next_token(lexed = 'valid_name')
                    quoted_literal(∅)
                  eat(wanted = 'valid_name')
                  get_next_token(lexed = 'valid_name')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'valid_name')
                  eat(eaten = 'valid_name', text = 'search', pos = 353, line = 11, col = 7)
                  next_choice(RESULT = Choice)
                next_choice()
                  eat(wanted = 'choice_sep')
                  get_next_token(lexed = 'angle_close')
                  next_choice(∅)
                var_input_elems(RESULT = VarInput)
              eat(wanted = 'angle_close')
              get_next_token(lexed = 'angle_close')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'angle_close')
              eat(eaten = 'angle_close', text = '>', pos = 359, line = 11, col = 13)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              positional(RESULT = Positional)
            opt_spec_elem(RESULT = Positional)
          opt_spec_def(RESULT = Positional)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 366, line = 11, col = 20)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Emit text matching pattern', pos = 368, line = 11, col = 22)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'angle_open')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'angle_open')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        get_next_token(lexed = 'angle_open')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'angle_open')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'angle_open')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'angle_open')
              taste(ok = True, is_first = True)
              get_next_token(returned = 'angle_open')
              eat(eaten = 'angle_open', text = '<', pos = 395, line = 12, col = 1)
              var_input_elems()
                eat(wanted = 'valid_name')
                get_next_token(lexed = 'valid_name')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'valid_name')
                eat(eaten = 'valid_name', text = 'rgx', pos = 396, line = 12, col = 2)
                eat(wanted = 'assign')
                get_next_token(lexed = 'angle_close')
                next_choice()
                  eat(wanted = 'choice_sep')
                  get_next_token(lexed = 'angle_close')
                  next_choice(∅)
                var_input_elems(RESULT = VarInput)
              eat(wanted = 'angle_close')
              get_next_token(lexed = 'angle_close')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'angle_close')
              eat(eaten = 'angle_close', text = '>', pos = 399, line = 12, col = 5)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              positional(RESULT = Positional)
            opt_spec_elem(RESULT = Positional)
          opt_spec_def(RESULT = Positional)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 414, line = 12, col = 20)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Python regular expression', pos = 416, line = 12, col = 22)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'angle_open')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'angle_open')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        get_next_token(lexed = 'angle_open')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'angle_open')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'angle_open')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'angle_open')
              taste(ok = True, is_first = True)
              get_next_token(returned = 'angle_open')
              eat(eaten = 'angle_open', text = '<', pos = 442, line = 13, col = 1)
              var_input_elems()
                eat(wanted = 'valid_name')
                get_next_token(lexed = 'valid_name')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'valid_name')
                eat(eaten = 'valid_name', text = 'path', pos = 443, line = 13, col = 2)
                eat(wanted = 'assign')
                get_next_token(lexed = 'angle_close')
                next_choice()
                  eat(wanted = 'choice_sep')
                  get_next_token(lexed = 'angle_close')
                  next_choice(∅)
                var_input_elems(RESULT = VarInput)
              eat(wanted = 'angle_close')
              get_next_token(lexed = 'angle_close')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'angle_close')
              eat(eaten = 'angle_close', text = '>', pos = 447, line = 13, col = 6)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              positional(RESULT = Positional)
            opt_spec_elem(RESULT = Positional)
          opt_spec_def(RESULT = Positional)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 461, line = 13, col = 20)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Path(s) to input', pos = 463, line = 13, col = 22)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'angle_open')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'angle_open')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        get_next_token(lexed = 'angle_open')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'angle_open')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'angle_open')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'angle_open')
              taste(ok = True, is_first = True)
              get_next_token(returned = 'angle_open')
              eat(eaten = 'angle_open', text = '<', pos = 480, line = 14, col = 1)
              var_input_elems()
                eat(wanted = 'valid_name')
                get_next_token(lexed = 'valid_name')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'valid_name')
                eat(eaten = 'valid_name', text = 'rep', pos = 481, line = 14, col = 2)
                eat(wanted = 'assign')
                get_next_token(lexed = 'angle_close')
                next_choice()
                  eat(wanted = 'choice_sep')
                  get_next_token(lexed = 'angle_close')
                  next_choice(∅)
                var_input_elems(RESULT = VarInput)
              eat(wanted = 'angle_close')
              get_next_token(lexed = 'angle_close')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'angle_close')
              eat(eaten = 'angle_close', text = '>', pos = 484, line = 14, col = 5)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              positional(RESULT = Positional)
            opt_spec_elem(RESULT = Positional)
          opt_spec_def(RESULT = Positional)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 499, line = 14, col = 20)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Replacement text', pos = 501, line = 14, col = 22)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'short_option')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'short_option')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        get_next_token(lexed = 'short_option')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'short_option')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'short_option')
              with_quantifer()
                with_quantifer(∅)
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'short_option')
                taste(ok = True, is_first = True)
                get_next_token(returned = 'short_option')
                eat(eaten = 'short_option', text = '-i', pos = 518, line = 15, col = 1)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'long_option')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'long_option')
                eat(eaten = 'long_option', text = '--ignore-case', pos = 521, line = 15, col = 4)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'opt_spec_sep')
                bare_option(∅)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter(∅)
                parameter_group()
                  eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter_group(∅)
                any_parameter(∅)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Option)
              aliases_and_option(RESULT = Option)
            opt_spec_elem(RESULT = Option)
          opt_spec_def(RESULT = Option)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 537, line = 15, col = 20)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Ignore case', pos = 539, line = 15, col = 22)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'short_option')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'short_option')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        get_next_token(lexed = 'short_option')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'short_option')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'short_option')
              with_quantifer()
                with_quantifer(∅)
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'short_option')
                taste(ok = True, is_first = True)
                get_next_token(returned = 'short_option')
                eat(eaten = 'short_option', text = '-v', pos = 551, line = 16, col = 1)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'long_option')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'long_option')
                eat(eaten = 'long_option', text = '--invert-match', pos = 554, line = 16, col = 4)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'opt_spec_sep')
                bare_option(∅)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter(∅)
                parameter_group()
                  eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter_group(∅)
                any_parameter(∅)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Option)
              aliases_and_option(RESULT = Option)
            opt_spec_elem(RESULT = Option)
          opt_spec_def(RESULT = Option)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 570, line = 16, col = 20)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Select non-matching lines', pos = 572, line = 16, col = 22)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'short_option')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'short_option')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        get_next_token(lexed = 'short_option')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'short_option')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'short_option')
              with_quantifer()
                with_quantifer(∅)
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'short_option')
                taste(ok = True, is_first = True)
                get_next_token(returned = 'short_option')
                eat(eaten = 'short_option', text = '-m', pos = 598, line = 17, col = 1)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'long_option')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'long_option')
                eat(eaten = 'long_option', text = '--max-count', pos = 601, line = 17, col = 4)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'angle_open')
                bare_option(∅)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'angle_open')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'angle_open')
                  eat(eaten = 'angle_open', text = '<', pos = 613, line = 17, col = 16)
                  var_input_elems()
                    eat(wanted = 'valid_name')
                    get_next_token(lexed = 'valid_name')
                    taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                    get_next_token(returned = 'valid_name')
                    eat(eaten = 'valid_name', text = 'n', pos = 614, line = 17, col = 17)
                    eat(wanted = 'assign')
                    get_next_token(lexed = 'angle_close')
                    next_choice()
                      eat(wanted = 'choice_sep')
                      get_next_token(lexed = 'angle_close')
                      next_choice(∅)
                    var_input_elems(RESULT = VarInput)
                  eat(wanted = 'angle_close')
                  get_next_token(lexed = 'angle_close')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'angle_close')
                  eat(eaten = 'angle_close', text = '>', pos = 615, line = 17, col = 18)
                  with_quantifer()
                    quantifier()
                      triple_dot()
                        eat(wanted = 'triple_dot')
                        get_next_token(lexed = 'opt_spec_sep')
                        triple_dot(∅)
                      quant_range()
                        eat(wanted = 'quant_range')
                        get_next_token(lexed = 'opt_spec_sep')
                        quant_range(∅)
                      eat(wanted = 'question')
                      get_next_token(lexed = 'opt_spec_sep')
                      quantifier(∅)
                    with_quantifer(RESULT = Parameter)
                  parameter(RESULT = Parameter)
                any_parameter(RESULT = Parameter)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter(∅)
                parameter_group()
                  eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter_group(∅)
                any_parameter(∅)
              aliases_and_option(RESULT = Option)
            opt_spec_elem(RESULT = Option)
          opt_spec_def(RESULT = Option)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 617, line = 17, col = 20)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Stop searching after N matches', pos = 619, line = 17, col = 22)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'short_option')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'short_option')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        get_next_token(lexed = 'short_option')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'short_option')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'short_option')
              with_quantifer()
                with_quantifer(∅)
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'short_option')
                taste(ok = True, is_first = True)
                get_next_token(returned = 'short_option')
                eat(eaten = 'short_option', text = '-C', pos = 650, line = 18, col = 1)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'long_option')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'long_option')
                eat(eaten = 'long_option', text = '--context', pos = 653, line = 18, col = 4)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'angle_open')
                bare_option(∅)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'angle_open')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'angle_open')
                  eat(eaten = 'angle_open', text = '<', pos = 663, line = 18, col = 14)
                  var_input_elems()
                    eat(wanted = 'valid_name')
                    get_next_token(lexed = 'valid_name')
                    taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                    get_next_token(returned = 'valid_name')
                    eat(eaten = 'valid_name', text = 'n', pos = 664, line = 18, col = 15)
                    eat(wanted = 'assign')
                    get_next_token(lexed = 'angle_close')
                    next_choice()
                      eat(wanted = 'choice_sep')
                      get_next_token(lexed = 'angle_close')
                      next_choice(∅)
                    var_input_elems(RESULT = VarInput)
                  eat(wanted = 'angle_close')
                  get_next_token(lexed = 'angle_close')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'angle_close')
                  eat(eaten = 'angle_close', text = '>', pos = 665, line = 18, col = 16)
                  with_quantifer()
                    quantifier()
                      triple_dot()
                        eat(wanted = 'triple_dot')
                        get_next_token(lexed = 'opt_spec_sep')
                        triple_dot(∅)
                      quant_range()
                        eat(wanted = 'quant_range')
                        get_next_token(lexed = 'opt_spec_sep')
                        quant_range(∅)
                      eat(wanted = 'question')
                      get_next_token(lexed = 'opt_spec_sep')
                      quantifier(∅)
                    with_quantifer(RESULT = Parameter)
                  parameter(RESULT = Parameter)
                any_parameter(RESULT = Parameter)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter(∅)
                parameter_group()
                  eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter_group(∅)
                any_parameter(∅)
              aliases_and_option(RESULT = Option)
            opt_spec_elem(RESULT = Option)
          opt_spec_def(RESULT = Option)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 669, line = 18, col = 20)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Print N lines of before/after context', pos = 671, line = 18, col = 22)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'long_option')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'long_option')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        get_next_token(lexed = 'long_option')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'long_option')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'long_option')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'long_option')
              with_quantifer()
                with_quantifer(∅)
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'long_option')
                taste(ok = True, is_first = True)
                get_next_token(returned = 'long_option')
                eat(eaten = 'long_option', text = '--color', pos = 709, line = 19, col = 1)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'angle_open')
                bare_option(∅)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'angle_open')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'angle_open')
                  eat(eaten = 'angle_open', text = '<', pos = 717, line = 19, col = 9)
                  var_input_elems()
                    eat(wanted = 'valid_name')
                    get_next_token(lexed = 'angle_close')
                    eat(wanted = 'assign')
                    get_next_token(lexed = 'angle_close')
                    next_choice()
                      eat(wanted = 'choice_sep')
                      get_next_token(lexed = 'angle_close')
                      next_choice(∅)
                    var_input_elems(RESULT = VarInput)
                  eat(wanted = 'angle_close')
                  get_next_token(lexed = 'angle_close')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'angle_close')
                  eat(eaten = 'angle_close', text = '>', pos = 718, line = 19, col = 10)
                  with_quantifer()
                    quantifier()
                      triple_dot()
                        eat(wanted = 'triple_dot')
                        get_next_token(lexed = 'opt_spec_sep')
                        triple_dot(∅)
                      quant_range()
                        eat(wanted = 'quant_range')
                        get_next_token(lexed = 'opt_spec_sep')
                        quant_range(∅)
                      eat(wanted = 'question')
                      get_next_token(lexed = 'opt_spec_sep')
                      quantifier(∅)
                    with_quantifer(RESULT = Parameter)
                  parameter(RESULT = Parameter)
                any_parameter(RESULT = Parameter)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter(∅)
                parameter_group()
                  eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter_group(∅)
                any_parameter(∅)
              aliases_and_option(RESULT = Option)
            opt_spec_elem(RESULT = Option)
          opt_spec_def(RESULT = Option)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 728, line = 19, col = 20)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Highlight matching text', pos = 730, line = 19, col = 22)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'short_option')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'short_option')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        get_next_token(lexed = 'short_option')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'short_option')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'short_option')
              with_quantifer()
                with_quantifer(∅)
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'short_option')
                taste(ok = True, is_first = True)
                get_next_token(returned = 'short_option')
                eat(eaten = 'short_option', text = '-n', pos = 754, line = 20, col = 1)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'long_option')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'long_option')
                eat(eaten = 'long_option', text = '--nsubs', pos = 757, line = 20, col = 4)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'angle_open')
                bare_option(∅)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'angle_open')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'angle_open')
                  eat(eaten = 'angle_open', text = '<', pos = 765, line = 20, col = 12)
                  var_input_elems()
                    eat(wanted = 'valid_name')
                    get_next_token(lexed = 'valid_name')
                    taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                    get_next_token(returned = 'valid_name')
                    eat(eaten = 'valid_name', text = 'n', pos = 766, line = 20, col = 13)
                    eat(wanted = 'assign')
                    get_next_token(lexed = 'angle_close')
                    next_choice()
                      eat(wanted = 'choice_sep')
                      get_next_token(lexed = 'angle_close')
                      next_choice(∅)
                    var_input_elems(RESULT = VarInput)
                  eat(wanted = 'angle_close')
                  get_next_token(lexed = 'angle_close')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'angle_close')
                  eat(eaten = 'angle_close', text = '>', pos = 767, line = 20, col = 14)
                  with_quantifer()
                    quantifier()
                      triple_dot()
                        eat(wanted = 'triple_dot')
                        get_next_token(lexed = 'opt_spec_sep')
                        triple_dot(∅)
                      quant_range()
                        eat(wanted = 'quant_range')
                        get_next_token(lexed = 'opt_spec_sep')
                        quant_range(∅)
                      eat(wanted = 'question')
                      get_next_token(lexed = 'opt_spec_sep')
                      quantifier(∅)
                    with_quantifer(RESULT = Parameter)
                  parameter(RESULT = Parameter)
                any_parameter(RESULT = Parameter)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter(∅)
                parameter_group()
                  eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter_group(∅)
                any_parameter(∅)
              aliases_and_option(RESULT = Option)
            opt_spec_elem(RESULT = Option)
          opt_spec_def(RESULT = Option)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 773, line = 20, col = 20)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'N of substitutions', pos = 775, line = 20, col = 22)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'short_option')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'short_option')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        get_next_token(lexed = 'short_option')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'short_option')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'short_option')
              with_quantifer()
                with_quantifer(∅)
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'short_option')
                taste(ok = True, is_first = True)
                get_next_token(returned = 'short_option')
                eat(eaten = 'short_option', text = '-g', pos = 794, line = 21, col = 1)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'long_option')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'long_option')
                eat(eaten = 'long_option', text = '--group', pos = 797, line = 21, col = 4)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'angle_open')
                bare_option(∅)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'angle_open')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'angle_open')
                  eat(eaten = 'angle_open', text = '<', pos = 805, line = 21, col = 12)
                  var_input_elems()
                    eat(wanted = 'valid_name')
                    get_next_token(lexed = 'valid_name')
                    taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                    get_next_token(returned = 'valid_name')
                    eat(eaten = 'valid_name', text = 'n', pos = 806, line = 21, col = 13)
                    eat(wanted = 'assign')
                    get_next_token(lexed = 'angle_close')
                    next_choice()
                      eat(wanted = 'choice_sep')
                      get_next_token(lexed = 'angle_close')
                      next_choice(∅)
                    var_input_elems(RESULT = VarInput)
                  eat(wanted = 'angle_close')
                  get_next_token(lexed = 'angle_close')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'angle_close')
                  eat(eaten = 'angle_close', text = '>', pos = 807, line = 21, col = 14)
                  with_quantifer()
                    quantifier()
                      triple_dot()
                        eat(wanted = 'triple_dot')
                        get_next_token(lexed = 'opt_spec_sep')
                        triple_dot(∅)
                      quant_range()
                        eat(wanted = 'quant_range')
                        get_next_token(lexed = 'opt_spec_sep')
                        quant_range(∅)
                      eat(wanted = 'question')
                      get_next_token(lexed = 'opt_spec_sep')
                      quantifier(∅)
                    with_quantifer(RESULT = Parameter)
                  parameter(RESULT = Parameter)
                any_parameter(RESULT = Parameter)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter(∅)
                parameter_group()
                  eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter_group(∅)
                any_parameter(∅)
              aliases_and_option(RESULT = Option)
            opt_spec_elem(RESULT = Option)
          opt_spec_def(RESULT = Option)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 813, line = 21, col = 20)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Emit just capture group N [0 for all]', pos = 815, line = 21, col = 22)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'short_option')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'short_option')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        get_next_token(lexed = 'short_option')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'short_option')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'short_option')
              with_quantifer()
                with_quantifer(∅)
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'short_option')
                taste(ok = True, is_first = True)
                get_next_token(returned = 'short_option')
                eat(eaten = 'short_option', text = '-d', pos = 853, line = 22, col = 1)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'long_option')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'long_option')
                eat(eaten = 'long_option', text = '--delim', pos = 856, line = 22, col = 4)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'angle_open')
                bare_option(∅)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'angle_open')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'angle_open')
                  eat(eaten = 'angle_open', text = '<', pos = 864, line = 22, col = 12)
                  var_input_elems()
                    eat(wanted = 'valid_name')
                    get_next_token(lexed = 'valid_name')
                    taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                    get_next_token(returned = 'valid_name')
                    eat(eaten = 'valid_name', text = 's', pos = 865, line = 22, col = 13)
                    eat(wanted = 'assign')
                    get_next_token(lexed = 'angle_close')
                    next_choice()
                      eat(wanted = 'choice_sep')
                      get_next_token(lexed = 'angle_close')
                      next_choice(∅)
                    var_input_elems(RESULT = VarInput)
                  eat(wanted = 'angle_close')
                  get_next_token(lexed = 'angle_close')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'angle_close')
                  eat(eaten = 'angle_close', text = '>', pos = 866, line = 22, col = 14)
                  with_quantifer()
                    quantifier()
                      triple_dot()
                        eat(wanted = 'triple_dot')
                        get_next_token(lexed = 'opt_spec_sep')
                        triple_dot(∅)
                      quant_range()
                        eat(wanted = 'quant_range')
                        get_next_token(lexed = 'opt_spec_sep')
                        quant_range(∅)
                      eat(wanted = 'question')
                      get_next_token(lexed = 'opt_spec_sep')
                      quantifier(∅)
                    with_quantifer(RESULT = Parameter)
                  parameter(RESULT = Parameter)
                any_parameter(RESULT = Parameter)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter(∅)
                parameter_group()
                  eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter_group(∅)
                any_parameter(∅)
              aliases_and_option(RESULT = Option)
            opt_spec_elem(RESULT = Option)
          opt_spec_def(RESULT = Option)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 872, line = 22, col = 20)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Delimeter for capture groups [tab]', pos = 874, line = 22, col = 22)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'short_option')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'short_option')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        get_next_token(lexed = 'short_option')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'short_option')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'short_option')
              with_quantifer()
                with_quantifer(∅)
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'short_option')
                taste(ok = True, is_first = True)
                get_next_token(returned = 'short_option')
                eat(eaten = 'short_option', text = '-p', pos = 909, line = 23, col = 1)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'long_option')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'long_option')
                eat(eaten = 'long_option', text = '--para', pos = 912, line = 23, col = 4)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'opt_spec_sep')
                bare_option(∅)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter(∅)
                parameter_group()
                  eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter_group(∅)
                any_parameter(∅)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Option)
              aliases_and_option(RESULT = Option)
            opt_spec_elem(RESULT = Option)
          opt_spec_def(RESULT = Option)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 928, line = 23, col = 20)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Emit capture groups one-per-line, paragraph-style', pos = 930, line = 23, col = 22)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        heading(∅)
      block_quote()
        eat(wanted = 'quoted_block')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              with_quantifer()
                with_quantifer(∅)
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                bare_option(∅)
              aliases_and_option(∅)
            opt_spec_elem(∅)
          opt_spec_def(∅)
        opt_spec(∅)
      section_content_elem(∅)
    collect_section_elems(RESULT = SectionElems)
  parse(RESULT = SpecAST)


# GRAMMAR
SpecAST(
    Variant(
        name = None
        is_partial = False
        Positional(
            name = 'task'
            quantifier = None
            Choice(
                text = 'grep'
        Group(
            name = None
            quantifier = None
            required = False
            Option(
                name = 'i'
                quantifier = None
                aliases = []
        Group(
            name = None
            quantifier = None
            required = False
            Option(
                name = 'v'
                quantifier = None
                aliases = []
        Group(
            name = None
            quantifier = None
            required = False
            Option(
                name = 'm'
                quantifier = None
                aliases = []
        Group(
            name = None
            quantifier = None
            required = False
            Option(
                name = 'C'
                quantifier = None
                aliases = []
        Group(
            name = None
            quantifier = None
            required = False
            Option(
                name = 'color'
                quantifier = None
                aliases = []
                Parameter(
                    name = None
                    quantifier = None
                    Choice(
                        text = 'red'
                    Choice(
                        text = 'green'
                    Choice(
                        text = 'blue'
        Positional(
            name = 'rgx'
            quantifier = None
        Group(
            name = None
            quantifier = None
            required = False
            Positional(
                name = 'path'
                quantifier = Quantifier(m=1, n=None, greedy=True)
    Variant(
        name = None
        is_partial = False
        Positional(
            name = 'task'
            quantifier = None
            Choice(
                text = 'sub'
        Group(
            name = None
            quantifier = None
            required = False
            Option(
                name = 'i'
                quantifier = None
                aliases = []
        Group(
            name = None
            quantifier = None
            required = False
            Option(
                name = 'n'
                quantifier = None
                aliases = []
        Positional(
            name = 'rgx'
            quantifier = None
        Positional(
            name = 'rep'
            quantifier = None
        Group(
            name = None
            quantifier = None
            required = False
            Positional(
                name = 'path'
                quantifier = Quantifier(m=1, n=None, greedy=True)
    Variant(
        name = None
        is_partial = False
        Positional(
            name = 'task'
            quantifier = None
            Choice(
                text = 'search'
        Group(
            name = None
            quantifier = None
            required = False
            Option(
                name = 'i'
                quantifier = None
                aliases = []
        Group(
            name = None
            quantifier = None
            required = False
            Option(
                name = 'g'
                quantifier = None
                aliases = []
        Group(
            name = None
            quantifier = None
            required = False
            Option(
                name = 'd'
                quantifier = None
                aliases = []
            ChoiceSep(
            Option(
                name = 'p'
                quantifier = None
                aliases = []
        Positional(
            name = 'rgx'
            quantifier = None
        Group(
            name = None
            quantifier = None
            required = False
            Positional(
                name = 'path'
                quantifier = Quantifier(m=1, n=None, greedy=True)
    OptSpec(
        scope = None
        text = 'Task to perform'
        token = Token(kind = 'angle_open', text = '<', pos = 209, line = 8, col = 1, indent = 0, is_first = True)
        Positional(
            name = 'task'
            quantifier = None
    OptSpec(
        scope = None
        text = 'Emit lines matching pattern'
        token = Token(kind = 'angle_open', text = '<', pos = 246, line = 9, col = 1, indent = 0, is_first = True)
        Positional(
            name = 'task'
            quantifier = None
            Choice(
                text = 'grep'
    OptSpec(
        scope = None
        text = 'Search for pattern and replace'
        token = Token(kind = 'angle_open', text = '<', pos = 295, line = 10, col = 1, indent = 0, is_first = True)
        Positional(
            name = 'task'
            quantifier = None
            Choice(
                text = 'sub'
    OptSpec(
        scope = None
        text = 'Emit text matching pattern'
        token = Token(kind = 'angle_open', text = '<', pos = 347, line = 11, col = 1, indent = 0, is_first = True)
        Positional(
            name = 'task'
            quantifier = None
            Choice(
                text = 'search'
    OptSpec(
        scope = None
        text = 'Python regular expression'
        token = Token(kind = 'angle_open', text = '<', pos = 395, line = 12, col = 1, indent = 0, is_first = True)
        Positional(
            name = 'rgx'
            quantifier = None
    OptSpec(
        scope = None
        text = 'Path(s) to input'
        token = Token(kind = 'angle_open', text = '<', pos = 442, line = 13, col = 1, indent = 0, is_first = True)
        Positional(
            name = 'path'
            quantifier = None
    OptSpec(
        scope = None
        text = 'Replacement text'
        token = Token(kind = 'angle_open', text = '<', pos = 480, line = 14, col = 1, indent = 0, is_first = True)
        Positional(
            name = 'rep'
            quantifier = None
    OptSpec(
        scope = None
        text = 'Ignore case'
        token = Token(kind = 'short_option', text = '-i', pos = 518, line = 15, col = 1, indent = 0, is_first = True)
        Option(
            name = 'ignore-case'
            quantifier = None
            aliases = [BareOption(name='i')]
    OptSpec(
        scope = None
        text = 'Select non-matching lines'
        token = Token(kind = 'short_option', text = '-v', pos = 551, line = 16, col = 1, indent = 0, is_first = True)
        Option(
            name = 'invert-match'
            quantifier = None
            aliases = [BareOption(name='v')]
    OptSpec(
        scope = None
        text = 'Stop searching after N matches'
        token = Token(kind = 'short_option', text = '-m', pos = 598, line = 17, col = 1, indent = 0, is_first = True)
        Option(
            name = 'max-count'
            quantifier = None
            aliases = [BareOption(name='m')]
            Parameter(
                name = 'n'
                quantifier = None
    OptSpec(
        scope = None
        text = 'Print N lines of before/after context'
        token = Token(kind = 'short_option', text = '-C', pos = 650, line = 18, col = 1, indent = 0, is_first = True)
        Option(
            name = 'context'
            quantifier = None
            aliases = [BareOption(name='C')]
            Parameter(
                name = 'n'
                quantifier = None
    OptSpec(
        scope = None
        text = 'Highlight matching text'
        token = Token(kind = 'long_option', text = '--color', pos = 709, line = 19, col = 1, indent = 0, is_first = True)
        Option(
            name = 'color'
            quantifier = None
            aliases = []
            Parameter(
                name = None
                quantifier = None
    OptSpec(
        scope = None
        text = 'N of substitutions'
        token = Token(kind = 'short_option', text = '-n', pos = 754, line = 20, col = 1, indent = 0, is_first = True)
        Option(
            name = 'nsubs'
            quantifier = None
            aliases = [BareOption(name='n')]
            Parameter(
                name = 'n'
                quantifier = None
    OptSpec(
        scope = None
        text = 'Emit just capture group N [0 for all]'
        token = Token(kind = 'short_option', text = '-g', pos = 794, line = 21, col = 1, indent = 0, is_first = True)
        Option(
            name = 'group'
            quantifier = None
            aliases = [BareOption(name='g')]
            Parameter(
                name = 'n'
                quantifier = None
    OptSpec(
        scope = None
        text = 'Delimeter for capture groups [tab]'
        token = Token(kind = 'short_option', text = '-d', pos = 853, line = 22, col = 1, indent = 0, is_first = True)
        Option(
            name = 'delim'
            quantifier = None
            aliases = [BareOption(name='d')]
            Parameter(
                name = 's'
                quantifier = None
    OptSpec(
        scope = None
        text = 'Emit capture groups one-per-line, paragraph-style'
        token = Token(kind = 'short_option', text = '-p', pos = 909, line = 23, col = 1, indent = 0, is_first = True)
        Option(
            name = 'para'
            quantifier = None
            aliases = [BareOption(name='p')]
