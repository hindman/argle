
# SPEC
  [-i]? [-v]...
       <rgx> <path>{1,7}?
  [--foo] <blort>?

Positionals needed ::

```
Positionals blorty blorty blort blort
foo bar fubb.
```

    <rgx> : Regular
            expression
    <path> : Path to
             the
             file

Options::

```
Positionals blorty blorty blort blort
foo bar fubb.
```

    -i  : Ignore case
          during search
    -v  : Invert: emit non-matched
          lines



# PARSER_DEBUG

parse()
  variant()
    eat(wanted = 'variant_def')
    get_next_token(lexed = 'brack_open')
    variant_elems()
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'brack_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, is_first = True)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 2, line = 1, col = 3)
        variant_elems()
          literal()
            eat(wanted = 'backquote1')
            get_next_token(lexed = 'short_option')
            literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'short_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'short_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'short_option')
              taste(ok = True, indent_reason = 'line', self_indent = 2, tok_indent = 2)
              get_next_token(returned = 'short_option')
              eat(eaten = 'short_option', text = '-i', pos = 3, line = 1, col = 4)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'brack_close')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'brack_close')
                  quant_range(∅)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(∅)
              with_quantifer(RESULT = Option)
            option(RESULT = Option)
          literal()
            eat(wanted = 'backquote1')
            get_next_token(lexed = 'brack_close')
            literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'line', self_indent = 2, tok_indent = 2)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 5, line = 1, col = 6)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'question')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'question')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'question')
            taste(ok = True, indent_reason = 'line', self_indent = 2, tok_indent = 2)
            get_next_token(returned = 'question')
            eat(eaten = 'question', text = '?', pos = 6, line = 1, col = 7)
            quantifier(RESULT = Quantifier)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'brack_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, indent_reason = 'line', self_indent = 2, tok_indent = 2)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 8, line = 1, col = 9)
        variant_elems()
          literal()
            eat(wanted = 'backquote1')
            get_next_token(lexed = 'short_option')
            literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'short_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'short_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'short_option')
              taste(ok = True, indent_reason = 'line', self_indent = 2, tok_indent = 2)
              get_next_token(returned = 'short_option')
              eat(eaten = 'short_option', text = '-v', pos = 9, line = 1, col = 10)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'brack_close')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'brack_close')
                  quant_range(∅)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(∅)
              with_quantifer(RESULT = Option)
            option(RESULT = Option)
          literal()
            eat(wanted = 'backquote1')
            get_next_token(lexed = 'brack_close')
            literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'line', self_indent = 2, tok_indent = 2)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 11, line = 1, col = 12)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'triple_dot')
              taste(ok = True, indent_reason = 'line', self_indent = 2, tok_indent = 2)
              get_next_token(returned = 'triple_dot')
              eat(eaten = 'triple_dot', text = '...', pos = 12, line = 1, col = 13)
              triple_dot(RESULT = Quantifier)
            eat(wanted = 'question')
            get_next_token(lexed = 'angle_open')
            quantifier(RESULT = Quantifier)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'indent', self_indent = 2, tok_indent = 7)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 23, line = 2, col = 8)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'indent', self_indent = 2, tok_indent = 7)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'rgx', pos = 24, line = 2, col = 9)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'indent', self_indent = 2, tok_indent = 7)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 27, line = 2, col = 12)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'angle_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'angle_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'indent', self_indent = 2, tok_indent = 7)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 29, line = 2, col = 14)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'indent', self_indent = 2, tok_indent = 7)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'path', pos = 30, line = 2, col = 15)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'indent', self_indent = 2, tok_indent = 7)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 34, line = 2, col = 19)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'quant_range')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'quant_range')
              taste(ok = True, indent_reason = 'indent', self_indent = 2, tok_indent = 7)
              get_next_token(returned = 'quant_range')
              eat(eaten = 'quant_range', text = '{1,7}', pos = 35, line = 2, col = 20)
              quant_range(RESULT = Quantifier)
            eat(wanted = 'question')
            get_next_token(lexed = 'question')
            taste(ok = True, indent_reason = 'indent', self_indent = 2, tok_indent = 7)
            get_next_token(returned = 'question')
            eat(eaten = 'question', text = '?', pos = 40, line = 2, col = 25)
            quantifier(RESULT = Quantifier)
          with_quantifer(RESULT = Positional)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'brack_open')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'brack_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = False, indent_reason = False, self_indent = 2, tok_indent = 2)
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'brack_open')
        with_quantifer()
          with_quantifer(∅)
        with_quantifer()
          with_quantifer(∅)
        positional(∅)
      option()
        bare_option()
          eat(wanted = 'long_option|short_option')
          get_next_token(lexed = 'brack_open')
          bare_option(∅)
        option(∅)
      variant_elems(RESULT = VariantElems)
    variant(RESULT = Variant)
  variant()
    eat(wanted = 'variant_def')
    get_next_token(lexed = 'brack_open')
    variant_elems()
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'brack_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, is_first = True)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 44, line = 3, col = 3)
        variant_elems()
          literal()
            eat(wanted = 'backquote1')
            get_next_token(lexed = 'long_option')
            literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'long_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'long_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'long_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'long_option')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'long_option')
              taste(ok = True, indent_reason = 'line', self_indent = 2, tok_indent = 2)
              get_next_token(returned = 'long_option')
              eat(eaten = 'long_option', text = '--foo', pos = 45, line = 3, col = 4)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'brack_close')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'brack_close')
                  quant_range(∅)
                eat(wanted = 'question')
                get_next_token(lexed = 'brack_close')
                quantifier(∅)
              with_quantifer(RESULT = Option)
            option(RESULT = Option)
          literal()
            eat(wanted = 'backquote1')
            get_next_token(lexed = 'brack_close')
            literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'line', self_indent = 2, tok_indent = 2)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 50, line = 3, col = 9)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'angle_open')
            quantifier(∅)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'line', self_indent = 2, tok_indent = 2)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 52, line = 3, col = 11)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 2, tok_indent = 2)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'blort', pos = 53, line = 3, col = 12)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 2, tok_indent = 2)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 58, line = 3, col = 17)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'question')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'question')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'question')
            taste(ok = True, indent_reason = 'line', self_indent = 2, tok_indent = 2)
            get_next_token(returned = 'question')
            eat(eaten = 'question', text = '?', pos = 59, line = 3, col = 18)
            quantifier(RESULT = Quantifier)
          with_quantifer(RESULT = Positional)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'section_title')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'section_title')
              quant_range(∅)
            eat(wanted = 'question')
            get_next_token(lexed = 'section_title')
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'section_title')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'section_title')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'section_title')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'section_title')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'section_title')
        with_quantifer()
          with_quantifer(∅)
        with_quantifer()
          with_quantifer(∅)
        positional(∅)
      option()
        bare_option()
          eat(wanted = 'long_option|short_option')
          get_next_token(lexed = 'section_title')
          bare_option(∅)
        option(∅)
      variant_elems(RESULT = VariantElems)
    variant(RESULT = Variant)
  variant()
    eat(wanted = 'variant_def')
    get_next_token(lexed = 'section_title')
    variant_elems()
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'section_title')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'section_title')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'section_title')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'section_title')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'section_title')
        with_quantifer()
          with_quantifer(∅)
        with_quantifer()
          with_quantifer(∅)
        positional(∅)
      option()
        bare_option()
          eat(wanted = 'long_option|short_option')
          get_next_token(lexed = 'section_title')
          bare_option(∅)
        option(∅)
      variant_elems(∅)
    variant(∅)
  collect_section_elems()
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'section_title')
      taste(ok = True, is_first = True)
      get_next_token(returned = 'section_title')
      eat(eaten = 'section_title', text = 'Positionals needed ::', pos = 62, line = 5, col = 1)
      any_section_title(RESULT = SectionTitle)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'backquote3')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'backquote3')
        heading(∅)
      block_quote()
        eat(wanted = 'backquote3_no_wrap|backquote3_comment|backquote3')
        get_next_token(lexed = 'backquote3')
        taste(ok = True, is_first = True)
        get_next_token(returned = 'backquote3')
        eat(eaten = 'backquote3', text = '```', pos = 85, line = 7, col = 1)
        quoted_text()
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char3')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char3')
          eat(eaten = 'quoted_char3', text = '\n', pos = 88, line = 7, col = 4)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'P', pos = 89, line = 8, col = 1)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'o', pos = 90, line = 8, col = 2)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 's', pos = 91, line = 8, col = 3)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'i', pos = 92, line = 8, col = 4)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 't', pos = 93, line = 8, col = 5)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'i', pos = 94, line = 8, col = 6)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'o', pos = 95, line = 8, col = 7)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'n', pos = 96, line = 8, col = 8)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'a', pos = 97, line = 8, col = 9)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'l', pos = 98, line = 8, col = 10)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 's', pos = 99, line = 8, col = 11)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = ' ', pos = 100, line = 8, col = 12)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'b', pos = 101, line = 8, col = 13)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'l', pos = 102, line = 8, col = 14)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'o', pos = 103, line = 8, col = 15)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'r', pos = 104, line = 8, col = 16)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 't', pos = 105, line = 8, col = 17)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'y', pos = 106, line = 8, col = 18)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = ' ', pos = 107, line = 8, col = 19)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'b', pos = 108, line = 8, col = 20)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'l', pos = 109, line = 8, col = 21)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'o', pos = 110, line = 8, col = 22)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'r', pos = 111, line = 8, col = 23)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 't', pos = 112, line = 8, col = 24)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'y', pos = 113, line = 8, col = 25)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = ' ', pos = 114, line = 8, col = 26)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'b', pos = 115, line = 8, col = 27)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'l', pos = 116, line = 8, col = 28)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'o', pos = 117, line = 8, col = 29)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'r', pos = 118, line = 8, col = 30)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 't', pos = 119, line = 8, col = 31)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = ' ', pos = 120, line = 8, col = 32)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'b', pos = 121, line = 8, col = 33)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'l', pos = 122, line = 8, col = 34)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'o', pos = 123, line = 8, col = 35)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'r', pos = 124, line = 8, col = 36)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 't', pos = 125, line = 8, col = 37)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char3')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char3')
          eat(eaten = 'quoted_char3', text = '\n', pos = 126, line = 8, col = 38)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'f', pos = 127, line = 9, col = 1)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'o', pos = 128, line = 9, col = 2)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'o', pos = 129, line = 9, col = 3)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = ' ', pos = 130, line = 9, col = 4)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'b', pos = 131, line = 9, col = 5)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'a', pos = 132, line = 9, col = 6)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'r', pos = 133, line = 9, col = 7)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = ' ', pos = 134, line = 9, col = 8)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'f', pos = 135, line = 9, col = 9)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'u', pos = 136, line = 9, col = 10)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'b', pos = 137, line = 9, col = 11)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'b', pos = 138, line = 9, col = 12)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = '.', pos = 139, line = 9, col = 13)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char3')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char3')
          eat(eaten = 'quoted_char3', text = '\n', pos = 140, line = 9, col = 14)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'backquote3')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'backquote3')
          eat(eaten = 'backquote3', text = '```', pos = 141, line = 10, col = 1)
          quoted_text(RESULT = QuotedText)
        block_quote(RESULT = BlockQuote)
      section_content_elem(RESULT = BlockQuote)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'angle_open')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'angle_open')
        heading(∅)
      block_quote()
        eat(wanted = 'backquote3_no_wrap|backquote3_comment|backquote3')
        get_next_token(lexed = 'angle_open')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'angle_open')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'angle_open')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'angle_open')
              taste(ok = True, is_first = True)
              get_next_token(returned = 'angle_open')
              eat(eaten = 'angle_open', text = '<', pos = 150, line = 12, col = 5)
              var_input_elems()
                eat(wanted = 'valid_name')
                get_next_token(lexed = 'valid_name')
                taste(ok = True, indent_reason = 'line', self_indent = 4, tok_indent = 4)
                get_next_token(returned = 'valid_name')
                eat(eaten = 'valid_name', text = 'rgx', pos = 151, line = 12, col = 6)
                eat(wanted = 'assign')
                get_next_token(lexed = 'angle_close')
                next_choice()
                  eat(wanted = 'choice_sep')
                  get_next_token(lexed = 'angle_close')
                  next_choice(∅)
                var_input_elems(RESULT = VarInput)
              eat(wanted = 'angle_close')
              get_next_token(lexed = 'angle_close')
              taste(ok = True, indent_reason = 'line', self_indent = 4, tok_indent = 4)
              get_next_token(returned = 'angle_close')
              eat(eaten = 'angle_close', text = '>', pos = 154, line = 12, col = 9)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              positional(RESULT = Positional)
            opt_spec_elem(RESULT = Positional)
          opt_spec_def(RESULT = Positional)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 4, tok_indent = 4)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 156, line = 12, col = 11)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 4, tok_indent = 4)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Regular', pos = 158, line = 12, col = 13)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'indent', self_indent = 4, tok_indent = 12)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'expression', pos = 178, line = 13, col = 13)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 4, tok_indent = 4)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'angle_open')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'angle_open')
        heading(∅)
      block_quote()
        eat(wanted = 'backquote3_no_wrap|backquote3_comment|backquote3')
        get_next_token(lexed = 'angle_open')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'angle_open')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'angle_open')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'angle_open')
              taste(ok = True, is_first = True)
              get_next_token(returned = 'angle_open')
              eat(eaten = 'angle_open', text = '<', pos = 193, line = 14, col = 5)
              var_input_elems()
                eat(wanted = 'valid_name')
                get_next_token(lexed = 'valid_name')
                taste(ok = True, indent_reason = 'line', self_indent = 4, tok_indent = 4)
                get_next_token(returned = 'valid_name')
                eat(eaten = 'valid_name', text = 'path', pos = 194, line = 14, col = 6)
                eat(wanted = 'assign')
                get_next_token(lexed = 'angle_close')
                next_choice()
                  eat(wanted = 'choice_sep')
                  get_next_token(lexed = 'angle_close')
                  next_choice(∅)
                var_input_elems(RESULT = VarInput)
              eat(wanted = 'angle_close')
              get_next_token(lexed = 'angle_close')
              taste(ok = True, indent_reason = 'line', self_indent = 4, tok_indent = 4)
              get_next_token(returned = 'angle_close')
              eat(eaten = 'angle_close', text = '>', pos = 198, line = 14, col = 10)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              positional(RESULT = Positional)
            opt_spec_elem(RESULT = Positional)
          opt_spec_def(RESULT = Positional)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 4, tok_indent = 4)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 200, line = 14, col = 12)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 4, tok_indent = 4)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Path to', pos = 202, line = 14, col = 14)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'indent', self_indent = 4, tok_indent = 13)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'the', pos = 223, line = 15, col = 14)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'indent', self_indent = 4, tok_indent = 13)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'file', pos = 240, line = 16, col = 14)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 4, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'section_title')
      taste(ok = True, is_first = True)
      get_next_token(returned = 'section_title')
      eat(eaten = 'section_title', text = 'Options::', pos = 246, line = 18, col = 1)
      any_section_title(RESULT = SectionTitle)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'backquote3')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'backquote3')
        heading(∅)
      block_quote()
        eat(wanted = 'backquote3_no_wrap|backquote3_comment|backquote3')
        get_next_token(lexed = 'backquote3')
        taste(ok = True, is_first = True)
        get_next_token(returned = 'backquote3')
        eat(eaten = 'backquote3', text = '```', pos = 257, line = 20, col = 1)
        quoted_text()
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char3')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char3')
          eat(eaten = 'quoted_char3', text = '\n', pos = 260, line = 20, col = 4)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'P', pos = 261, line = 21, col = 1)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'o', pos = 262, line = 21, col = 2)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 's', pos = 263, line = 21, col = 3)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'i', pos = 264, line = 21, col = 4)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 't', pos = 265, line = 21, col = 5)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'i', pos = 266, line = 21, col = 6)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'o', pos = 267, line = 21, col = 7)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'n', pos = 268, line = 21, col = 8)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'a', pos = 269, line = 21, col = 9)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'l', pos = 270, line = 21, col = 10)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 's', pos = 271, line = 21, col = 11)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = ' ', pos = 272, line = 21, col = 12)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'b', pos = 273, line = 21, col = 13)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'l', pos = 274, line = 21, col = 14)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'o', pos = 275, line = 21, col = 15)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'r', pos = 276, line = 21, col = 16)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 't', pos = 277, line = 21, col = 17)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'y', pos = 278, line = 21, col = 18)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = ' ', pos = 279, line = 21, col = 19)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'b', pos = 280, line = 21, col = 20)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'l', pos = 281, line = 21, col = 21)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'o', pos = 282, line = 21, col = 22)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'r', pos = 283, line = 21, col = 23)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 't', pos = 284, line = 21, col = 24)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'y', pos = 285, line = 21, col = 25)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = ' ', pos = 286, line = 21, col = 26)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'b', pos = 287, line = 21, col = 27)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'l', pos = 288, line = 21, col = 28)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'o', pos = 289, line = 21, col = 29)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'r', pos = 290, line = 21, col = 30)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 't', pos = 291, line = 21, col = 31)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = ' ', pos = 292, line = 21, col = 32)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'b', pos = 293, line = 21, col = 33)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'l', pos = 294, line = 21, col = 34)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'o', pos = 295, line = 21, col = 35)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'r', pos = 296, line = 21, col = 36)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 't', pos = 297, line = 21, col = 37)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char3')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char3')
          eat(eaten = 'quoted_char3', text = '\n', pos = 298, line = 21, col = 38)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'f', pos = 299, line = 22, col = 1)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'o', pos = 300, line = 22, col = 2)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'o', pos = 301, line = 22, col = 3)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = ' ', pos = 302, line = 22, col = 4)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'b', pos = 303, line = 22, col = 5)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'a', pos = 304, line = 22, col = 6)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'r', pos = 305, line = 22, col = 7)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = ' ', pos = 306, line = 22, col = 8)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'f', pos = 307, line = 22, col = 9)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'u', pos = 308, line = 22, col = 10)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'b', pos = 309, line = 22, col = 11)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = 'b', pos = 310, line = 22, col = 12)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char1')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char1')
          eat(eaten = 'quoted_char1', text = '.', pos = 311, line = 22, col = 13)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'quoted_char3')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'quoted_char3')
          eat(eaten = 'quoted_char3', text = '\n', pos = 312, line = 22, col = 14)
          eat(wanted = 'literal_backslash|literal_backquote3|quoted_char3|quoted_char1|backquote3')
          get_next_token(lexed = 'backquote3')
          taste(ok = True, indent_reason = 'quoted', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'backquote3')
          eat(eaten = 'backquote3', text = '```', pos = 313, line = 23, col = 1)
          quoted_text(RESULT = QuotedText)
        block_quote(RESULT = BlockQuote)
      section_content_elem(RESULT = BlockQuote)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'short_option')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'short_option')
        heading(∅)
      block_quote()
        eat(wanted = 'backquote3_no_wrap|backquote3_comment|backquote3')
        get_next_token(lexed = 'short_option')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'short_option')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'short_option')
              with_quantifer()
                with_quantifer(∅)
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'short_option')
                taste(ok = True, is_first = True)
                get_next_token(returned = 'short_option')
                eat(eaten = 'short_option', text = '-i', pos = 322, line = 25, col = 5)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'opt_spec_sep')
                bare_option(∅)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter(∅)
                parameter_group()
                  eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter_group(∅)
                any_parameter(∅)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Option)
              aliases_and_option(RESULT = Option)
            opt_spec_elem(RESULT = Option)
          opt_spec_def(RESULT = Option)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 4, tok_indent = 4)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 326, line = 25, col = 9)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 4, tok_indent = 4)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Ignore case', pos = 328, line = 25, col = 11)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'indent', self_indent = 4, tok_indent = 10)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'during search', pos = 350, line = 26, col = 11)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 4, tok_indent = 4)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'short_option')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'short_option')
        heading(∅)
      block_quote()
        eat(wanted = 'backquote3_no_wrap|backquote3_comment|backquote3')
        get_next_token(lexed = 'short_option')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'short_option')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'short_option')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'short_option')
              with_quantifer()
                with_quantifer(∅)
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'short_option')
                taste(ok = True, is_first = True)
                get_next_token(returned = 'short_option')
                eat(eaten = 'short_option', text = '-v', pos = 368, line = 27, col = 5)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'opt_spec_sep')
                bare_option(∅)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter(∅)
                parameter_group()
                  eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter_group(∅)
                any_parameter(∅)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  eat(wanted = 'question')
                  get_next_token(lexed = 'opt_spec_sep')
                  quantifier(∅)
                with_quantifer(RESULT = Option)
              aliases_and_option(RESULT = Option)
            opt_spec_elem(RESULT = Option)
          opt_spec_def(RESULT = Option)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 4, tok_indent = 4)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 372, line = 27, col = 9)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 4, tok_indent = 4)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Invert: emit non-matched', pos = 374, line = 27, col = 11)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'indent', self_indent = 4, tok_indent = 10)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'lines', pos = 409, line = 28, col = 11)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        heading(∅)
      block_quote()
        eat(wanted = 'backquote3_no_wrap|backquote3_comment|backquote3')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              with_quantifer()
                with_quantifer(∅)
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                bare_option(∅)
              aliases_and_option(∅)
            opt_spec_elem(∅)
          opt_spec_def(∅)
        opt_spec(∅)
      section_content_elem(∅)
    collect_section_elems(RESULT = SectionElems)
  parse(RESULT = SpecAST)


# GRAMMAR
SpecAST(
    elems = [
        Variant(
            name = None,
            is_partial = False,
            elems = [
                Group(
                    name = None,
                    quantifier = Quantifier(m=0, n=1, greedy=True),
                    required = False,
                    elems = [
                        Option(
                            name = 'i',
                            quantifier = None,
                            aliases = [],
                            params = [
                            ],
                        ),
                    ],
                ),
                Group(
                    name = None,
                    quantifier = Quantifier(m=1, n=None, greedy=True),
                    required = False,
                    elems = [
                        Option(
                            name = 'v',
                            quantifier = None,
                            aliases = [],
                            params = [
                            ],
                        ),
                    ],
                ),
                Positional(
                    name = 'rgx',
                    quantifier = None,
                    elems = [
                    ],
                ),
                Positional(
                    name = 'path',
                    quantifier = Quantifier(m=1, n=7, greedy=False),
                    elems = [
                    ],
                ),
            ],
        ),
        Variant(
            name = None,
            is_partial = False,
            elems = [
                Group(
                    name = None,
                    quantifier = None,
                    required = False,
                    elems = [
                        Option(
                            name = 'foo',
                            quantifier = None,
                            aliases = [],
                            params = [
                            ],
                        ),
                    ],
                ),
                Positional(
                    name = 'blort',
                    quantifier = Quantifier(m=0, n=1, greedy=True),
                    elems = [
                    ],
                ),
            ],
        ),
        SectionTitle(
            scope = None,
            title = 'Positionals needed ',
            token = Token(kind='section_title', text='Positionals needed ::', pos=62, line=5, col=1, indent=0, is_first=True),
        ),
        BlockQuote(
            text = QuotedText(text='\nPositionals blorty blorty blort blort\nfoo bar fubb.\n'),
            comment = False,
            no_wrap = False,
            token = Token(kind='backquote3', text='```', pos=85, line=7, col=1, indent=0, is_first=True),
        ),
        OptSpec(
            scope = None,
            text = 'Regular expression',
            token = Token(kind='angle_open', text='<', pos=150, line=12, col=5, indent=4, is_first=True),
            opt = Positional(
                name = 'rgx',
                quantifier = None,
                elems = [
                ],
            ),
        ),
        OptSpec(
            scope = None,
            text = 'Path to the file',
            token = Token(kind='angle_open', text='<', pos=193, line=14, col=5, indent=4, is_first=True),
            opt = Positional(
                name = 'path',
                quantifier = None,
                elems = [
                ],
            ),
        ),
        SectionTitle(
            scope = None,
            title = 'Options',
            token = Token(kind='section_title', text='Options::', pos=246, line=18, col=1, indent=0, is_first=True),
        ),
        BlockQuote(
            text = QuotedText(text='\nPositionals blorty blorty blort blort\nfoo bar fubb.\n'),
            comment = False,
            no_wrap = False,
            token = Token(kind='backquote3', text='```', pos=257, line=20, col=1, indent=0, is_first=True),
        ),
        OptSpec(
            scope = None,
            text = 'Ignore case during search',
            token = Token(kind='short_option', text='-i', pos=322, line=25, col=5, indent=4, is_first=True),
            opt = Option(
                name = 'i',
                quantifier = None,
                aliases = [],
                params = [
                ],
            ),
        ),
        OptSpec(
            scope = None,
            text = 'Invert: emit non-matched lines',
            token = Token(kind='short_option', text='-v', pos=368, line=27, col=5, indent=4, is_first=True),
            opt = Option(
                name = 'v',
                quantifier = None,
                aliases = [],
                params = [
                ],
            ),
        ),
    ],
),
