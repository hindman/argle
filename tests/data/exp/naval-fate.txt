
# SPEC
<weapon=ship>        <action=new>        <name>...
<weapon=ship> <name> <action=move>       <x> <y> [--speed <kn>]
<weapon=ship>        <action=shoot>      <x> <y>
<weapon=mine>        <action=set|remove> <x> <y> [--moored | --drifting]

<name>       : Ship name
<x>          : X coordinate
<y>          : Y coordinate
--speed <kn> : Speed in knots [default: 10]
--moored     : Moored (anchored) mine
--drifting   : Drifting mine



# PARSER_DEBUG

parse()
  variant()
    eat(wanted = 'variant_def')
    get_next_token(lexed = 'angle_open')
    variant_elems()
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, is_first = True)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 0, line = 1, col = 1)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'weapon', pos = 1, line = 1, col = 2)
          eat(wanted = 'assign')
          get_next_token(lexed = 'assign')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'assign')
          eat(eaten = 'assign', text = '=', pos = 7, line = 1, col = 8)
          next_choice()
            literal()
              eat(wanted = 'backquote1')
              get_next_token(lexed = 'valid_name')
              literal(∅)
            eat(wanted = 'valid_name')
            get_next_token(lexed = 'valid_name')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'valid_name')
            eat(eaten = 'valid_name', text = 'ship', pos = 8, line = 1, col = 9)
            next_choice(RESULT = Choice)
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 12, line = 1, col = 13)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 21, line = 1, col = 22)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'action', pos = 22, line = 1, col = 23)
          eat(wanted = 'assign')
          get_next_token(lexed = 'assign')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'assign')
          eat(eaten = 'assign', text = '=', pos = 28, line = 1, col = 29)
          next_choice()
            literal()
              eat(wanted = 'backquote1')
              get_next_token(lexed = 'valid_name')
              literal(∅)
            eat(wanted = 'valid_name')
            get_next_token(lexed = 'valid_name')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'valid_name')
            eat(eaten = 'valid_name', text = 'new', pos = 29, line = 1, col = 30)
            next_choice(RESULT = Choice)
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 32, line = 1, col = 33)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 41, line = 1, col = 42)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'name', pos = 42, line = 1, col = 43)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 46, line = 1, col = 47)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'triple_dot')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'triple_dot')
              eat(eaten = 'triple_dot', text = '...', pos = 47, line = 1, col = 48)
              triple_dot(RESULT = Quantifier)
            eat(wanted = 'question')
            get_next_token(lexed = 'angle_open')
            quantifier(RESULT = Quantifier)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
        with_quantifer()
          with_quantifer(∅)
        positional(∅)
      option()
        bare_option()
          eat(wanted = 'long_option|short_option')
          get_next_token(lexed = 'angle_open')
          bare_option(∅)
        option(∅)
      variant_elems(RESULT = VariantElems)
    variant(RESULT = Variant)
  variant()
    eat(wanted = 'variant_def')
    get_next_token(lexed = 'angle_open')
    variant_elems()
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, is_first = True)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 51, line = 2, col = 1)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'weapon', pos = 52, line = 2, col = 2)
          eat(wanted = 'assign')
          get_next_token(lexed = 'assign')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'assign')
          eat(eaten = 'assign', text = '=', pos = 58, line = 2, col = 8)
          next_choice()
            literal()
              eat(wanted = 'backquote1')
              get_next_token(lexed = 'valid_name')
              literal(∅)
            eat(wanted = 'valid_name')
            get_next_token(lexed = 'valid_name')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'valid_name')
            eat(eaten = 'valid_name', text = 'ship', pos = 59, line = 2, col = 9)
            next_choice(RESULT = Choice)
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 63, line = 2, col = 13)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 65, line = 2, col = 15)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'name', pos = 66, line = 2, col = 16)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 70, line = 2, col = 20)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 72, line = 2, col = 22)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'action', pos = 73, line = 2, col = 23)
          eat(wanted = 'assign')
          get_next_token(lexed = 'assign')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'assign')
          eat(eaten = 'assign', text = '=', pos = 79, line = 2, col = 29)
          next_choice()
            literal()
              eat(wanted = 'backquote1')
              get_next_token(lexed = 'valid_name')
              literal(∅)
            eat(wanted = 'valid_name')
            get_next_token(lexed = 'valid_name')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'valid_name')
            eat(eaten = 'valid_name', text = 'move', pos = 80, line = 2, col = 30)
            next_choice(RESULT = Choice)
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 84, line = 2, col = 34)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 92, line = 2, col = 42)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'x', pos = 93, line = 2, col = 43)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 94, line = 2, col = 44)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 96, line = 2, col = 46)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'y', pos = 97, line = 2, col = 47)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 98, line = 2, col = 48)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'brack_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 100, line = 2, col = 50)
        variant_elems()
          literal()
            eat(wanted = 'backquote1')
            get_next_token(lexed = 'long_option')
            literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'long_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'long_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'long_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'long_option')
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'long_option')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'long_option')
              eat(eaten = 'long_option', text = '--speed', pos = 101, line = 2, col = 51)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'angle_open')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'angle_open')
                eat(eaten = 'angle_open', text = '<', pos = 109, line = 2, col = 59)
                var_input_elems()
                  eat(wanted = 'valid_name')
                  get_next_token(lexed = 'valid_name')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'valid_name')
                  eat(eaten = 'valid_name', text = 'kn', pos = 110, line = 2, col = 60)
                  eat(wanted = 'assign')
                  get_next_token(lexed = 'angle_close')
                  next_choice()
                    eat(wanted = 'choice_sep')
                    get_next_token(lexed = 'angle_close')
                    next_choice(∅)
                  var_input_elems(RESULT = VarInput)
                eat(wanted = 'angle_close')
                get_next_token(lexed = 'angle_close')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'angle_close')
                eat(eaten = 'angle_close', text = '>', pos = 112, line = 2, col = 62)
                with_quantifer()
                  quantifier()
                    triple_dot()
                      eat(wanted = 'triple_dot')
                      get_next_token(lexed = 'brack_close')
                      triple_dot(∅)
                    quant_range()
                      eat(wanted = 'quant_range')
                      get_next_token(lexed = 'brack_close')
                      quant_range(∅)
                    quantifier(∅)
                  with_quantifer(RESULT = Parameter)
                parameter(RESULT = Parameter)
              any_parameter(RESULT = Parameter)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            option(RESULT = Option)
          literal()
            eat(wanted = 'backquote1')
            get_next_token(lexed = 'brack_close')
            literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 113, line = 2, col = 63)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
        with_quantifer()
          with_quantifer(∅)
        positional(∅)
      option()
        bare_option()
          eat(wanted = 'long_option|short_option')
          get_next_token(lexed = 'angle_open')
          bare_option(∅)
        option(∅)
      variant_elems(RESULT = VariantElems)
    variant(RESULT = Variant)
  variant()
    eat(wanted = 'variant_def')
    get_next_token(lexed = 'angle_open')
    variant_elems()
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, is_first = True)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 115, line = 3, col = 1)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'weapon', pos = 116, line = 3, col = 2)
          eat(wanted = 'assign')
          get_next_token(lexed = 'assign')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'assign')
          eat(eaten = 'assign', text = '=', pos = 122, line = 3, col = 8)
          next_choice()
            literal()
              eat(wanted = 'backquote1')
              get_next_token(lexed = 'valid_name')
              literal(∅)
            eat(wanted = 'valid_name')
            get_next_token(lexed = 'valid_name')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'valid_name')
            eat(eaten = 'valid_name', text = 'ship', pos = 123, line = 3, col = 9)
            next_choice(RESULT = Choice)
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 127, line = 3, col = 13)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 136, line = 3, col = 22)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'action', pos = 137, line = 3, col = 23)
          eat(wanted = 'assign')
          get_next_token(lexed = 'assign')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'assign')
          eat(eaten = 'assign', text = '=', pos = 143, line = 3, col = 29)
          next_choice()
            literal()
              eat(wanted = 'backquote1')
              get_next_token(lexed = 'valid_name')
              literal(∅)
            eat(wanted = 'valid_name')
            get_next_token(lexed = 'valid_name')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'valid_name')
            eat(eaten = 'valid_name', text = 'shoot', pos = 144, line = 3, col = 30)
            next_choice(RESULT = Choice)
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 149, line = 3, col = 35)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 156, line = 3, col = 42)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'x', pos = 157, line = 3, col = 43)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 158, line = 3, col = 44)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 160, line = 3, col = 46)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'y', pos = 161, line = 3, col = 47)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 162, line = 3, col = 48)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
        with_quantifer()
          with_quantifer(∅)
        positional(∅)
      option()
        bare_option()
          eat(wanted = 'long_option|short_option')
          get_next_token(lexed = 'angle_open')
          bare_option(∅)
        option(∅)
      variant_elems(RESULT = VariantElems)
    variant(RESULT = Variant)
  variant()
    eat(wanted = 'variant_def')
    get_next_token(lexed = 'angle_open')
    variant_elems()
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, is_first = True)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 164, line = 4, col = 1)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'weapon', pos = 165, line = 4, col = 2)
          eat(wanted = 'assign')
          get_next_token(lexed = 'assign')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'assign')
          eat(eaten = 'assign', text = '=', pos = 171, line = 4, col = 8)
          next_choice()
            literal()
              eat(wanted = 'backquote1')
              get_next_token(lexed = 'valid_name')
              literal(∅)
            eat(wanted = 'valid_name')
            get_next_token(lexed = 'valid_name')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'valid_name')
            eat(eaten = 'valid_name', text = 'mine', pos = 172, line = 4, col = 9)
            next_choice(RESULT = Choice)
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 176, line = 4, col = 13)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 185, line = 4, col = 22)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'action', pos = 186, line = 4, col = 23)
          eat(wanted = 'assign')
          get_next_token(lexed = 'assign')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'assign')
          eat(eaten = 'assign', text = '=', pos = 192, line = 4, col = 29)
          next_choice()
            literal()
              eat(wanted = 'backquote1')
              get_next_token(lexed = 'valid_name')
              literal(∅)
            eat(wanted = 'valid_name')
            get_next_token(lexed = 'valid_name')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'valid_name')
            eat(eaten = 'valid_name', text = 'set', pos = 193, line = 4, col = 30)
            next_choice(RESULT = Choice)
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'choice_sep')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'choice_sep')
            eat(eaten = 'choice_sep', text = '|', pos = 196, line = 4, col = 33)
            literal()
              eat(wanted = 'backquote1')
              get_next_token(lexed = 'valid_name')
              literal(∅)
            eat(wanted = 'valid_name')
            get_next_token(lexed = 'valid_name')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'valid_name')
            eat(eaten = 'valid_name', text = 'remove', pos = 197, line = 4, col = 34)
            next_choice(RESULT = Choice)
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 203, line = 4, col = 40)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 205, line = 4, col = 42)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'x', pos = 206, line = 4, col = 43)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 207, line = 4, col = 44)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 209, line = 4, col = 46)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'y', pos = 210, line = 4, col = 47)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 211, line = 4, col = 48)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'brack_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'brack_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'brack_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'brack_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'brack_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'brack_open')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_open')
        eat(eaten = 'brack_open', text = '[', pos = 213, line = 4, col = 50)
        variant_elems()
          literal()
            eat(wanted = 'backquote1')
            get_next_token(lexed = 'long_option')
            literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'long_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'long_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'long_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'long_option')
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'long_option')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'long_option')
              eat(eaten = 'long_option', text = '--moored', pos = 214, line = 4, col = 51)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'choice_sep')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'choice_sep')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'choice_sep')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'choice_sep')
                  quant_range(∅)
                quantifier(∅)
              with_quantifer(RESULT = Option)
            option(RESULT = Option)
          literal()
            eat(wanted = 'backquote1')
            get_next_token(lexed = 'choice_sep')
            literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'choice_sep')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'choice_sep')
            eat(eaten = 'choice_sep', text = '|', pos = 223, line = 4, col = 60)
            choice_sep(RESULT = ChoiceSep)
          literal()
            eat(wanted = 'backquote1')
            get_next_token(lexed = 'long_option')
            literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'long_option')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'long_option')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'long_option')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'long_option')
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'long_option')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'long_option')
              eat(eaten = 'long_option', text = '--drifting', pos = 225, line = 4, col = 62)
              bare_option(RESULT = BareOption)
            any_parameter()
              parameter()
                eat(wanted = 'angle_open')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter(∅)
              parameter_group()
                eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                get_next_token(lexed = 'brack_close')
                with_quantifer()
                  with_quantifer(∅)
                parameter_group(∅)
              any_parameter(∅)
            with_quantifer()
              quantifier()
                triple_dot()
                  eat(wanted = 'triple_dot')
                  get_next_token(lexed = 'brack_close')
                  triple_dot(∅)
                quant_range()
                  eat(wanted = 'quant_range')
                  get_next_token(lexed = 'brack_close')
                  quant_range(∅)
                quantifier(∅)
              with_quantifer(RESULT = Option)
            option(RESULT = Option)
          literal()
            eat(wanted = 'backquote1')
            get_next_token(lexed = 'brack_close')
            literal(∅)
          choice_sep()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'brack_close')
            choice_sep(∅)
          partial_usage()
            eat(wanted = 'partial_usage')
            get_next_token(lexed = 'brack_close')
            partial_usage(∅)
          any_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            any_group(∅)
          positional()
            eat(wanted = 'angle_open')
            get_next_token(lexed = 'brack_close')
            with_quantifer()
              with_quantifer(∅)
            positional(∅)
          option()
            bare_option()
              eat(wanted = 'long_option|short_option')
              get_next_token(lexed = 'brack_close')
              bare_option(∅)
            option(∅)
          variant_elems(RESULT = VariantElems)
        eat(wanted = 'brack_close')
        get_next_token(lexed = 'brack_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'brack_close')
        eat(eaten = 'brack_close', text = ']', pos = 235, line = 4, col = 72)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'angle_open')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'angle_open')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Group)
        any_group(RESULT = Group)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
        with_quantifer()
          with_quantifer(∅)
        positional(∅)
      option()
        bare_option()
          eat(wanted = 'long_option|short_option')
          get_next_token(lexed = 'angle_open')
          bare_option(∅)
        option(∅)
      variant_elems(RESULT = VariantElems)
    variant(RESULT = Variant)
  variant()
    eat(wanted = 'variant_def')
    get_next_token(lexed = 'angle_open')
    variant_elems()
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'angle_open')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'angle_open')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'angle_open')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'angle_open')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'angle_open')
        taste(ok = True, is_first = True)
        get_next_token(returned = 'angle_open')
        eat(eaten = 'angle_open', text = '<', pos = 238, line = 6, col = 1)
        var_input_elems()
          eat(wanted = 'valid_name')
          get_next_token(lexed = 'valid_name')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'valid_name')
          eat(eaten = 'valid_name', text = 'name', pos = 239, line = 6, col = 2)
          eat(wanted = 'assign')
          get_next_token(lexed = 'angle_close')
          next_choice()
            eat(wanted = 'choice_sep')
            get_next_token(lexed = 'angle_close')
            next_choice(∅)
          var_input_elems(RESULT = VarInput)
        eat(wanted = 'angle_close')
        get_next_token(lexed = 'angle_close')
        taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
        get_next_token(returned = 'angle_close')
        eat(eaten = 'angle_close', text = '>', pos = 243, line = 6, col = 6)
        with_quantifer()
          quantifier()
            triple_dot()
              eat(wanted = 'triple_dot')
              get_next_token(lexed = 'opt_spec_sep')
              triple_dot(∅)
            quant_range()
              eat(wanted = 'quant_range')
              get_next_token(lexed = 'opt_spec_sep')
              quant_range(∅)
            quantifier(∅)
          with_quantifer(RESULT = Positional)
        positional(RESULT = Positional)
      literal()
        eat(wanted = 'backquote1')
        get_next_token(lexed = 'opt_spec_sep')
        literal(∅)
      choice_sep()
        eat(wanted = 'choice_sep')
        get_next_token(lexed = 'opt_spec_sep')
        choice_sep(∅)
      partial_usage()
        eat(wanted = 'partial_usage')
        get_next_token(lexed = 'opt_spec_sep')
        partial_usage(∅)
      any_group()
        eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
        get_next_token(lexed = 'opt_spec_sep')
        with_quantifer()
          with_quantifer(∅)
        any_group(∅)
      positional()
        eat(wanted = 'angle_open')
        get_next_token(lexed = 'opt_spec_sep')
        with_quantifer()
          with_quantifer(∅)
        positional(∅)
      option()
        bare_option()
          eat(wanted = 'long_option|short_option')
          get_next_token(lexed = 'opt_spec_sep')
          bare_option(∅)
        option(∅)
      variant_elems(RESULT = VariantElems)
    variant(∅)
  collect_section_elems()
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'angle_open')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'angle_open')
        heading(∅)
      block_quote()
        eat(wanted = 'backquote3_no_wrap|backquote3_comment|backquote3')
        get_next_token(lexed = 'angle_open')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'angle_open')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'angle_open')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'angle_open')
              taste(ok = True, is_first = True)
              get_next_token(returned = 'angle_open')
              eat(eaten = 'angle_open', text = '<', pos = 238, line = 6, col = 1)
              var_input_elems()
                eat(wanted = 'valid_name')
                get_next_token(lexed = 'valid_name')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'valid_name')
                eat(eaten = 'valid_name', text = 'name', pos = 239, line = 6, col = 2)
                eat(wanted = 'assign')
                get_next_token(lexed = 'angle_close')
                next_choice()
                  eat(wanted = 'choice_sep')
                  get_next_token(lexed = 'angle_close')
                  next_choice(∅)
                var_input_elems(RESULT = VarInput)
              eat(wanted = 'angle_close')
              get_next_token(lexed = 'angle_close')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'angle_close')
              eat(eaten = 'angle_close', text = '>', pos = 243, line = 6, col = 6)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              positional(RESULT = Positional)
            opt_spec_elem(RESULT = Positional)
          opt_spec_def(RESULT = Positional)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 251, line = 6, col = 14)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Ship name', pos = 253, line = 6, col = 16)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'angle_open')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'angle_open')
        heading(∅)
      block_quote()
        eat(wanted = 'backquote3_no_wrap|backquote3_comment|backquote3')
        get_next_token(lexed = 'angle_open')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'angle_open')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'angle_open')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'angle_open')
              taste(ok = True, is_first = True)
              get_next_token(returned = 'angle_open')
              eat(eaten = 'angle_open', text = '<', pos = 263, line = 7, col = 1)
              var_input_elems()
                eat(wanted = 'valid_name')
                get_next_token(lexed = 'valid_name')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'valid_name')
                eat(eaten = 'valid_name', text = 'x', pos = 264, line = 7, col = 2)
                eat(wanted = 'assign')
                get_next_token(lexed = 'angle_close')
                next_choice()
                  eat(wanted = 'choice_sep')
                  get_next_token(lexed = 'angle_close')
                  next_choice(∅)
                var_input_elems(RESULT = VarInput)
              eat(wanted = 'angle_close')
              get_next_token(lexed = 'angle_close')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'angle_close')
              eat(eaten = 'angle_close', text = '>', pos = 265, line = 7, col = 3)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              positional(RESULT = Positional)
            opt_spec_elem(RESULT = Positional)
          opt_spec_def(RESULT = Positional)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 276, line = 7, col = 14)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'X coordinate', pos = 278, line = 7, col = 16)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'angle_open')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'angle_open')
        heading(∅)
      block_quote()
        eat(wanted = 'backquote3_no_wrap|backquote3_comment|backquote3')
        get_next_token(lexed = 'angle_open')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'angle_open')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'angle_open')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'angle_open')
              taste(ok = True, is_first = True)
              get_next_token(returned = 'angle_open')
              eat(eaten = 'angle_open', text = '<', pos = 291, line = 8, col = 1)
              var_input_elems()
                eat(wanted = 'valid_name')
                get_next_token(lexed = 'valid_name')
                taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                get_next_token(returned = 'valid_name')
                eat(eaten = 'valid_name', text = 'y', pos = 292, line = 8, col = 2)
                eat(wanted = 'assign')
                get_next_token(lexed = 'angle_close')
                next_choice()
                  eat(wanted = 'choice_sep')
                  get_next_token(lexed = 'angle_close')
                  next_choice(∅)
                var_input_elems(RESULT = VarInput)
              eat(wanted = 'angle_close')
              get_next_token(lexed = 'angle_close')
              taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
              get_next_token(returned = 'angle_close')
              eat(eaten = 'angle_close', text = '>', pos = 293, line = 8, col = 3)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  quantifier(∅)
                with_quantifer(RESULT = Positional)
              positional(RESULT = Positional)
            opt_spec_elem(RESULT = Positional)
          opt_spec_def(RESULT = Positional)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 304, line = 8, col = 14)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Y coordinate', pos = 306, line = 8, col = 16)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'long_option')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'long_option')
        heading(∅)
      block_quote()
        eat(wanted = 'backquote3_no_wrap|backquote3_comment|backquote3')
        get_next_token(lexed = 'long_option')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'long_option')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'long_option')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'long_option')
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'long_option')
                taste(ok = True, is_first = True)
                get_next_token(returned = 'long_option')
                eat(eaten = 'long_option', text = '--speed', pos = 319, line = 9, col = 1)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'angle_open')
                bare_option(∅)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'angle_open')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'angle_open')
                  eat(eaten = 'angle_open', text = '<', pos = 327, line = 9, col = 9)
                  var_input_elems()
                    eat(wanted = 'valid_name')
                    get_next_token(lexed = 'valid_name')
                    taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                    get_next_token(returned = 'valid_name')
                    eat(eaten = 'valid_name', text = 'kn', pos = 328, line = 9, col = 10)
                    eat(wanted = 'assign')
                    get_next_token(lexed = 'angle_close')
                    next_choice()
                      eat(wanted = 'choice_sep')
                      get_next_token(lexed = 'angle_close')
                      next_choice(∅)
                    var_input_elems(RESULT = VarInput)
                  eat(wanted = 'angle_close')
                  get_next_token(lexed = 'angle_close')
                  taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
                  get_next_token(returned = 'angle_close')
                  eat(eaten = 'angle_close', text = '>', pos = 330, line = 9, col = 12)
                  with_quantifer()
                    quantifier()
                      triple_dot()
                        eat(wanted = 'triple_dot')
                        get_next_token(lexed = 'opt_spec_sep')
                        triple_dot(∅)
                      quant_range()
                        eat(wanted = 'quant_range')
                        get_next_token(lexed = 'opt_spec_sep')
                        quant_range(∅)
                      quantifier(∅)
                    with_quantifer(RESULT = Parameter)
                  parameter(RESULT = Parameter)
                any_parameter(RESULT = Parameter)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter(∅)
                parameter_group()
                  eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter_group(∅)
                any_parameter(∅)
              aliases_and_option(RESULT = Option)
            opt_spec_elem(RESULT = Option)
          opt_spec_def(RESULT = Option)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 332, line = 9, col = 14)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Speed in knots [default: 10]', pos = 334, line = 9, col = 16)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'long_option')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'long_option')
        heading(∅)
      block_quote()
        eat(wanted = 'backquote3_no_wrap|backquote3_comment|backquote3')
        get_next_token(lexed = 'long_option')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'long_option')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'long_option')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'long_option')
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'long_option')
                taste(ok = True, is_first = True)
                get_next_token(returned = 'long_option')
                eat(eaten = 'long_option', text = '--moored', pos = 363, line = 10, col = 1)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'opt_spec_sep')
                bare_option(∅)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter(∅)
                parameter_group()
                  eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter_group(∅)
                any_parameter(∅)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  quantifier(∅)
                with_quantifer(RESULT = Option)
              aliases_and_option(RESULT = Option)
            opt_spec_elem(RESULT = Option)
          opt_spec_def(RESULT = Option)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 376, line = 10, col = 14)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Moored (anchored) mine', pos = 378, line = 10, col = 16)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = False, indent_reason = False, self_indent = 0, tok_indent = 0)
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      get_next_token(lexed = 'long_option')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        get_next_token(lexed = 'long_option')
        heading(∅)
      block_quote()
        eat(wanted = 'backquote3_no_wrap|backquote3_comment|backquote3')
        get_next_token(lexed = 'long_option')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          get_next_token(lexed = 'long_option')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            get_next_token(lexed = 'long_option')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              get_next_token(lexed = 'long_option')
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'long_option')
                taste(ok = True, is_first = True)
                get_next_token(returned = 'long_option')
                eat(eaten = 'long_option', text = '--drifting', pos = 401, line = 11, col = 1)
                bare_option(RESULT = BareOption)
              bare_option()
                eat(wanted = 'long_option|short_option')
                get_next_token(lexed = 'opt_spec_sep')
                bare_option(∅)
              any_parameter()
                parameter()
                  eat(wanted = 'angle_open')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter(∅)
                parameter_group()
                  eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
                  get_next_token(lexed = 'opt_spec_sep')
                  with_quantifer()
                    with_quantifer(∅)
                  parameter_group(∅)
                any_parameter(∅)
              with_quantifer()
                quantifier()
                  triple_dot()
                    eat(wanted = 'triple_dot')
                    get_next_token(lexed = 'opt_spec_sep')
                    triple_dot(∅)
                  quant_range()
                    eat(wanted = 'quant_range')
                    get_next_token(lexed = 'opt_spec_sep')
                    quant_range(∅)
                  quantifier(∅)
                with_quantifer(RESULT = Option)
              aliases_and_option(RESULT = Option)
            opt_spec_elem(RESULT = Option)
          opt_spec_def(RESULT = Option)
        opt_help_text()
          eat(wanted = 'opt_spec_sep')
          get_next_token(lexed = 'opt_spec_sep')
          taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
          get_next_token(returned = 'opt_spec_sep')
          eat(eaten = 'opt_spec_sep', text = ':', pos = 414, line = 11, col = 14)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            get_next_token(lexed = 'rest_of_line')
            taste(ok = True, indent_reason = 'line', self_indent = 0, tok_indent = 0)
            get_next_token(returned = 'rest_of_line')
            eat(eaten = 'rest_of_line', text = 'Drifting mine', pos = 416, line = 11, col = 16)
            rest_of_line(RESULT = RestOfLine)
          rest_of_line()
            eat(wanted = 'rest_of_line')
            rest_of_line(∅)
          opt_help_text(RESULT = OptHelpText)
        opt_spec(RESULT = OptSpec)
      section_content_elem(RESULT = OptSpec)
    any_section_title()
      eat(wanted = 'scoped_section_title|section_title')
      any_section_title(∅)
    section_content_elem()
      heading()
        eat(wanted = 'heading')
        heading(∅)
      block_quote()
        eat(wanted = 'backquote3_no_wrap|backquote3_comment|backquote3')
        block_quote(∅)
      opt_spec()
        opt_spec_scope()
          eat(wanted = 'opt_spec_scope|opt_spec_scope_empty')
          opt_spec_scope(∅)
        opt_spec_def()
          opt_spec_group()
            eat(wanted = 'paren_open|paren_open_named|brack_open|brack_open_named')
            with_quantifer()
              with_quantifer(∅)
            opt_spec_group(∅)
          opt_spec_elem()
            positional()
              eat(wanted = 'angle_open')
              with_quantifer()
                with_quantifer(∅)
              positional(∅)
            aliases_and_option()
              bare_option()
                eat(wanted = 'long_option|short_option')
                bare_option(∅)
              aliases_and_option(∅)
            opt_spec_elem(∅)
          opt_spec_def(∅)
        opt_spec(∅)
      section_content_elem(∅)
    collect_section_elems(RESULT = SectionElems)
  parse(RESULT = ParsedSpec)


# GRAMMAR
SpecAST(
    elems = [
        Variant(
            name = None,
            is_partial = False,
            elems = [
                Positional(
                    name = 'weapon',
                    nargs = None,
                    elems = [
                        Choice(
                            text = 'ship',
                        ),
                    ],
                ),
                Positional(
                    name = 'action',
                    nargs = None,
                    elems = [
                        Choice(
                            text = 'new',
                        ),
                    ],
                ),
                Positional(
                    name = 'name',
                    nargs = Quantifier(m=1, n=None, required=True, greedy=True),
                    elems = [
                    ],
                ),
            ],
        ),
        Variant(
            name = None,
            is_partial = False,
            elems = [
                Positional(
                    name = 'weapon',
                    nargs = None,
                    elems = [
                        Choice(
                            text = 'ship',
                        ),
                    ],
                ),
                Positional(
                    name = 'name',
                    nargs = None,
                    elems = [
                    ],
                ),
                Positional(
                    name = 'action',
                    nargs = None,
                    elems = [
                        Choice(
                            text = 'move',
                        ),
                    ],
                ),
                Positional(
                    name = 'x',
                    nargs = None,
                    elems = [
                    ],
                ),
                Positional(
                    name = 'y',
                    nargs = None,
                    elems = [
                    ],
                ),
                Group(
                    name = None,
                    ntimes = Quantifier(m=1, n=1, required=False, greedy=True),
                    required = False,
                    elems = [
                        Option(
                            name = 'speed',
                            nargs = None,
                            ntimes = None,
                            aliases = [],
                            elems = [
                                Parameter(
                                    name = 'kn',
                                    nargs = None,
                                    elems = [
                                    ],
                                ),
                            ],
                        ),
                    ],
                ),
            ],
        ),
        Variant(
            name = None,
            is_partial = False,
            elems = [
                Positional(
                    name = 'weapon',
                    nargs = None,
                    elems = [
                        Choice(
                            text = 'ship',
                        ),
                    ],
                ),
                Positional(
                    name = 'action',
                    nargs = None,
                    elems = [
                        Choice(
                            text = 'shoot',
                        ),
                    ],
                ),
                Positional(
                    name = 'x',
                    nargs = None,
                    elems = [
                    ],
                ),
                Positional(
                    name = 'y',
                    nargs = None,
                    elems = [
                    ],
                ),
            ],
        ),
        Variant(
            name = None,
            is_partial = False,
            elems = [
                Positional(
                    name = 'weapon',
                    nargs = None,
                    elems = [
                        Choice(
                            text = 'mine',
                        ),
                    ],
                ),
                Positional(
                    name = 'action',
                    nargs = None,
                    elems = [
                        Choice(
                            text = 'set',
                        ),
                        Choice(
                            text = 'remove',
                        ),
                    ],
                ),
                Positional(
                    name = 'x',
                    nargs = None,
                    elems = [
                    ],
                ),
                Positional(
                    name = 'y',
                    nargs = None,
                    elems = [
                    ],
                ),
                Group(
                    name = None,
                    ntimes = Quantifier(m=1, n=1, required=False, greedy=True),
                    required = False,
                    elems = [
                        Option(
                            name = 'moored',
                            nargs = None,
                            ntimes = None,
                            aliases = [],
                            elems = [
                            ],
                        ),
                        ChoiceSep(
                        ),
                        Option(
                            name = 'drifting',
                            nargs = None,
                            ntimes = None,
                            aliases = [],
                            elems = [
                            ],
                        ),
                    ],
                ),
            ],
        ),
        OptSpec(
            scope = None,
            text = 'Ship name',
            token = Token(kind='angle_open', text='<', pos=238, line=6, col=1, indent=0, is_first=True),
            opt = Positional(
                name = 'name',
                nargs = None,
                elems = [
                ],
            ),
        ),
        OptSpec(
            scope = None,
            text = 'X coordinate',
            token = Token(kind='angle_open', text='<', pos=263, line=7, col=1, indent=0, is_first=True),
            opt = Positional(
                name = 'x',
                nargs = None,
                elems = [
                ],
            ),
        ),
        OptSpec(
            scope = None,
            text = 'Y coordinate',
            token = Token(kind='angle_open', text='<', pos=291, line=8, col=1, indent=0, is_first=True),
            opt = Positional(
                name = 'y',
                nargs = None,
                elems = [
                ],
            ),
        ),
        OptSpec(
            scope = None,
            text = 'Speed in knots [default: 10]',
            token = Token(kind='long_option', text='--speed', pos=319, line=9, col=1, indent=0, is_first=True),
            opt = Option(
                name = 'speed',
                nargs = None,
                ntimes = None,
                aliases = [],
                elems = [
                    Parameter(
                        name = 'kn',
                        nargs = None,
                        elems = [
                        ],
                    ),
                ],
            ),
        ),
        OptSpec(
            scope = None,
            text = 'Moored (anchored) mine',
            token = Token(kind='long_option', text='--moored', pos=363, line=10, col=1, indent=0, is_first=True),
            opt = Option(
                name = 'moored',
                nargs = None,
                ntimes = None,
                aliases = [],
                elems = [
                ],
            ),
        ),
        OptSpec(
            scope = None,
            text = 'Drifting mine',
            token = Token(kind='long_option', text='--drifting', pos=401, line=11, col=1, indent=0, is_first=True),
            opt = Option(
                name = 'drifting',
                nargs = None,
                ntimes = None,
                aliases = [],
                elems = [
                ],
            ),
        ),
    ],
),
