--------
Classes and attributes
--------

Parser
    # Command line option and argument parser.

    opts
    simple_spec
    wildcards
    sections
    formatter_config
    program
    add_help

Opt
    # Configuration object used by the Parser.
    # Each represents either an option or positional argument.

    option_spec
    nargs
    ntimes
    required
    text
    sections
    aliases
    tolerant
    option
    destination
    _opt_type
    arg_names
    aliases
    _nargs

ParsedOptions
    # Object returned by Parser.parse().
    # Basic form: self.DESTINATION = VALUE.
    # Also behaves like a collection: iterable, dictable, etc.

    args
    parsed_opts
    args_index

ParsedOpt
    # Used by the Parser to store parsing results for an Opt.
    # Each ParsedOpt represents one DESTINATION-VALUE pair.

    destination
    opt
    _values

FormatterConfig
    # Object for the user to configure details about the generation
    # of usage and help text.

    sections
    program_name
    section_label_punct
    after_section_label
    after_section
    program_summary
    style
    opt_style
    alias_style

Section
    # Used to create labeled groups of Opt instances for the purposes
    # of help text generation.

    name
    label
    text
    opts

GenericParser
    # A general-purpose parser meant to be sub-classed.
    # The subclass provides a lexer and parsing functions.

    lexer
    parser_functions
    current_token

SimpleSpecParserGenericParser(GenericParser)
    # Used to parse a simple grammar spec given by the user.
    # The parse() method returns a Phrase representing the CLI grammar.

GrammarSpecParser
    # Like SimpleSpecParser, but for the full variant-based grammar.
    # Not implemented yet.

Phrase
    # Object used by Parser to represent CLI grammar and do parsing work.
    # Each Phrase can store subphrases, so the grammar forms a tree.
    # Leaves are Phrase objects corresponding to Opt intances.

    subphrases
    opt

RegexLexer
    # General purpose lexer for use by SimpleSpecParser and GrammarSpecParser.

    text
    token_types
    pos
    max_pos
    is_eof

Token
    # Simple data object emitted by the RegexLexer.

    token_type
    value

OptToken
    # A data object holding the parsed content of a Token.
    # Lacks constructor; should add.
    # Callers are using these attributes.

    option
    option_spec
    nargs
    opt_type
    arg_names

Enum
    # Used for collections of constants.
    # Should switch to short-con.

    _enum_name
    _members
    _rmembers

EnumMember
    # Used by Enum.

    enum_name
    name
    value
    **kws    # Set as attributes on self

RegexLexerErrorException(Exception)
    pass

OptoPyErrorException(Exception)
    pass

