#! /usr/bin/env python

import sys
import pyperclip

from textwrap import dedent
from pathlib import Path

from argle import Parser, bargparse as bp

from argle.grammar import (
    SpecParser,
    Rgxs,
    TokDefs,
)

halt = bp.halt
EXIT = bp.EXIT

DESCRIPTION = dedent(f'''
    Basic script for quick-and-dirty experiments with Argle.
''')

ARG_CONFIGS = (
    dict(
        name = 'xs',
        nargs = '*',
        metavar = 'X',
        help = 'Generic args',
    ),
    dict(
        name = f'--debug -d',
        action = 'store_true',
        help = 'Parse spec with debug=True',
    ),
    dict(
        add_help = True,
    ),
)

def main(args):

    p = Parser()
    opts = p.parse()
    print(opts)

    if False:

        ap, opts = bp.parse_args(
            args,
            ARG_CONFIGS,
            description = DESCRIPTION,
        )

        # Display one of the regexes.
        attr = get(opts, 'attr')
        if attr:
            print(Rgxs[attr])

def get(xs, i, default = None):
    # Like dict.get(), but also works for sequences.
    try:
        return xs[i]
    except (IndexError, KeyError) as e:
        return default

def read_file(path):
    with open(path) as fh:
        return fh.read()

if __name__ == '__main__':
    main(sys.argv[1:])

