#! /usr/bin/env python

####
# job-client : configuration via the planned Argle syntax and API.
####

# Step 1:
#
#   Define the spec to control:
#     - Usage variants.
#     - Grammar.
#     - Help section titles.
#     - Option metavars and help text.
#
#   This spec is shown with indenting and vertical alignment,
#   but users are not required to do that. Unless explicitly marked
#   with triple-backquotes, the spec is configuration syntax, not
#   literal help text.

SPEC = '''
    job-client

    configure    = <task=configure> --job-env {} --od-user {}
    submit       = <task=submit> --job-config-file {} --requests-file {} [--start-job]
    upload       = <task=upload> --job-id {} --requests-file {} [--resume]
    start        = <task=start> --job-id {}
    get          = <task=get> --job-id {}
    stop         = <task=stop> --job-id {}
    download     = <task=download> --job-id {} [download-options]
    find         = <task=find> [--job-id {}] [--od-user {}] [--job-status]
    help         = --help
    version      = --version
    examples     = --examples
    autocomplete = --autocomplete

    Task =>
        <task=configure> : Set up the default configurations for job-client.
        <task=submit>    : Submit the config file for a new job.
        <task=upload>    : Upload requests for a submitted job.
        <task=start>     : Start a submitted job.
        <task=stop>      : Stop a job.
        <task=download>  : Download Item data for a job.
        <task=get>       : Get information about a job.
        <task=find>      : Find jobs.

    General =>
        --env ENV         : Environment (production for most users).
        --od-user USER    : Open Directory user name.
        --log-level LEV   : DEBUG, INFO, WARNING, ERROR, or CRITICAL [DEBUG].
        --disable-logging : Disable logging.

    Special =>
        --examples        : Display configuration and usage examples.
        --autocomplete    : Display instructions for enabling autocomplete.
        --version         : Display version information.
        --help -h         : Display the help message.

    Command =>
        --job-id -j ID            : The job id.
        --od-user -u USER         : Open Directory user who submitted the job.
        --job-status STATUS       : Job status.
        --job-config-file -c PATH : Path to job configuration file, which should contain an JobConfig, either base64-encoded or as JSON.
        --requests-file -r PATH   : Path to the job requests file, which should contain Item objects, base64-encoded, one per line. If this option is given, job-client will upload after submitting the JobConfig.
        --start-job               : After submitting job and uploading requests, start job.
        --resume N                : Resume upload, starting at line N [1].

    Download =>
        --output_file -o PATH : Output file path [STDOUT].
        --start_index N       : Start index [1].
        --stop_index N        : Stop index, inclusive.
        --force -f            : Download even if job is not finished.
'''

# Step 2:
#
#   Use the API to wrap up the configuration.
#   
#   TODO: this is an older API; update.

LEVELS = ('DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL')

p = Parser(SPEC)
p.config('resume start_index', default = 1)
p.config('log_level', choices = LEVELS)
p.config('job_config_file requests_file output_file', convert = Path)
p.config('resume start_index stop_index', convert = int)
p.config('help version examples autocomplete', high = True)

